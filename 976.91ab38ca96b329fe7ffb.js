"use strict";(("undefined"!=typeof self?self:this).webpackChunk_subwallet_sub_connect=("undefined"!=typeof self?self:this).webpackChunk_subwallet_sub_connect||[]).push([[976],{60976:(e,t,r)=>{r.r(t),r.d(t,{Account:()=>w,AddressLookupTableAccount:()=>Ee,AddressLookupTableInstruction:()=>vr,AddressLookupTableProgram:()=>xr,Authorized:()=>Or,BLOCKHASH_CACHE_TIMEOUT_MS:()=>Le,BPF_LOADER_DEPRECATED_PROGRAM_ID:()=>S,BPF_LOADER_PROGRAM_ID:()=>ye,BpfLoader:()=>me,COMPUTE_BUDGET_INSTRUCTION_LAYOUTS:()=>Er,ComputeBudgetInstruction:()=>Pr,ComputeBudgetProgram:()=>Cr,Connection:()=>Ir,Ed25519Program:()=>Tr,Enum:()=>h,EpochSchedule:()=>Ie,FeeCalculatorLayout:()=>oe,Keypair:()=>Ar,LAMPORTS_PER_SOL:()=>os,LOOKUP_TABLE_INSTRUCTION_LAYOUTS:()=>_r,Loader:()=>pe,Lockup:()=>Nr,MAX_SEED_LENGTH:()=>m,Message:()=>O,MessageAccountKeys:()=>E,MessageV0:()=>N,NONCE_ACCOUNT_LENGTH:()=>ce,NonceAccount:()=>ue,PACKET_DATA_SIZE:()=>I,PUBLIC_KEY_LENGTH:()=>b,PublicKey:()=>f,SIGNATURE_LENGTH_IN_BYTES:()=>_,SOLANA_SCHEMA:()=>g,STAKE_CONFIG_ID:()=>Wr,STAKE_INSTRUCTION_LAYOUTS:()=>Ur,SYSTEM_INSTRUCTION_LAYOUTS:()=>he,SYSVAR_CLOCK_PUBKEY:()=>j,SYSVAR_EPOCH_SCHEDULE_PUBKEY:()=>J,SYSVAR_INSTRUCTIONS_PUBKEY:()=>G,SYSVAR_RECENT_BLOCKHASHES_PUBKEY:()=>Y,SYSVAR_RENT_PUBKEY:()=>X,SYSVAR_REWARDS_PUBKEY:()=>Z,SYSVAR_SLOT_HASHES_PUBKEY:()=>Q,SYSVAR_SLOT_HISTORY_PUBKEY:()=>ee,SYSVAR_STAKE_HISTORY_PUBKEY:()=>te,Secp256k1Program:()=>Lr,SendTransactionError:()=>Ae,SolanaJSONRPCError:()=>ve,SolanaJSONRPCErrorCode:()=>_e,StakeAuthorizationLayout:()=>Vr,StakeInstruction:()=>qr,StakeProgram:()=>Mr,Struct:()=>l,SystemInstruction:()=>le,SystemProgram:()=>ge,Transaction:()=>H,TransactionExpiredBlockheightExceededError:()=>v,TransactionExpiredNonceInvalidError:()=>P,TransactionExpiredTimeoutError:()=>x,TransactionInstruction:()=>D,TransactionMessage:()=>F,TransactionStatus:()=>U,VALIDATOR_INFO_KEY:()=>Jr,VERSION_PREFIX_MASK:()=>A,VOTE_PROGRAM_ID:()=>Xr,ValidatorInfo:()=>Yr,VersionedMessage:()=>q,VersionedTransaction:()=>$,VoteAccount:()=>Qr,VoteAuthorizationLayout:()=>$r,VoteInit:()=>Dr,VoteInstruction:()=>Hr,VoteProgram:()=>jr,clusterApiUrl:()=>ns,sendAndConfirmRawTransaction:()=>is,sendAndConfirmTransaction:()=>re});var s=r(47190);const n=s.e.utils.randomPrivateKey,i=()=>{const e=s.e.utils.randomPrivateKey(),t=o(e),r=new Uint8Array(64);return r.set(e),r.set(t,32),{publicKey:t,secretKey:r}},o=s.e.getPublicKey;function a(e){try{return s.e.ExtendedPoint.fromHex(e),!0}catch{return!1}}const c=(e,t)=>s.e.sign(e,t.slice(0,32)),u=s.e.verify,d=e=>s.b.Buffer.isBuffer(e)?e:e instanceof Uint8Array?s.b.Buffer.from(e.buffer,e.byteOffset,e.byteLength):s.b.Buffer.from(e);class l{constructor(e){Object.assign(this,e)}encode(){return s.b.Buffer.from((0,s.s)(g,this))}static decode(e){return(0,s.d)(g,this,e)}static decodeUnchecked(e){return(0,s.a)(g,this,e)}}class h extends l{constructor(e){if(super(e),this.enum="",1!==Object.keys(e).length)throw new Error("Enum can only take single value");Object.keys(e).map((e=>{this.enum=e}))}}const g=new Map;var p;let y;const m=32,b=32;let k=1;y=Symbol.toStringTag;class f extends l{constructor(e){if(super({}),this._bn=void 0,function(e){return void 0!==e._bn}(e))this._bn=e._bn;else{if("string"==typeof e){const t=s.c.decode(e);if(t.length!=b)throw new Error("Invalid public key input");this._bn=new s.B(t)}else this._bn=new s.B(e);if(this._bn.byteLength()>b)throw new Error("Invalid public key input")}}static unique(){const e=new f(k);return k+=1,new f(e.toBuffer())}equals(e){return this._bn.eq(e._bn)}toBase58(){return s.c.encode(this.toBytes())}toJSON(){return this.toBase58()}toBytes(){const e=this.toBuffer();return new Uint8Array(e.buffer,e.byteOffset,e.byteLength)}toBuffer(){const e=this._bn.toArrayLike(s.b.Buffer);if(e.length===b)return e;const t=s.b.Buffer.alloc(32);return e.copy(t,32-e.length),t}get[y](){return`PublicKey(${this.toString()})`}toString(){return this.toBase58()}static async createWithSeed(e,t,r){const n=s.b.Buffer.concat([e.toBuffer(),s.b.Buffer.from(t),r.toBuffer()]),i=(0,s.f)(n);return new f(i)}static createProgramAddressSync(e,t){let r=s.b.Buffer.alloc(0);e.forEach((function(e){if(e.length>32)throw new TypeError("Max seed length exceeded");r=s.b.Buffer.concat([r,d(e)])})),r=s.b.Buffer.concat([r,t.toBuffer(),s.b.Buffer.from("ProgramDerivedAddress")]);const n=(0,s.f)(r);if(a(n))throw new Error("Invalid seeds, address must fall off the curve");return new f(n)}static async createProgramAddress(e,t){return this.createProgramAddressSync(e,t)}static findProgramAddressSync(e,t){let r,n=255;for(;0!=n;){try{const i=e.concat(s.b.Buffer.from([n]));r=this.createProgramAddressSync(i,t)}catch(e){if(e instanceof TypeError)throw e;n--;continue}return[r,n]}throw new Error("Unable to find a viable program address nonce")}static async findProgramAddress(e,t){return this.findProgramAddressSync(e,t)}static isOnCurve(e){return a(new f(e).toBytes())}}p=f,f.default=new p("11111111111111111111111111111111"),g.set(f,{kind:"struct",fields:[["_bn","u256"]]});class w{constructor(e){if(this._publicKey=void 0,this._secretKey=void 0,e){const t=d(e);if(64!==e.length)throw new Error("bad secret key size");this._publicKey=t.slice(32,64),this._secretKey=t.slice(0,32)}else this._secretKey=d(n()),this._publicKey=d(o(this._secretKey))}get publicKey(){return new f(this._publicKey)}get secretKey(){return s.b.Buffer.concat([this._secretKey,this._publicKey],64)}}const S=new f("BPFLoader1111111111111111111111111111111111"),I=1232,A=127,_=64;class v extends Error{constructor(e){super(`Signature ${e} has expired: block height exceeded.`),this.signature=void 0,this.signature=e}}Object.defineProperty(v.prototype,"name",{value:"TransactionExpiredBlockheightExceededError"});class x extends Error{constructor(e,t){super(`Transaction was not confirmed in ${t.toFixed(2)} seconds. It is unknown if it succeeded or failed. Check signature ${e} using the Solana Explorer or CLI tools.`),this.signature=void 0,this.signature=e}}Object.defineProperty(x.prototype,"name",{value:"TransactionExpiredTimeoutError"});class P extends Error{constructor(e){super(`Signature ${e} has expired: the nonce is no longer valid.`),this.signature=void 0,this.signature=e}}Object.defineProperty(P.prototype,"name",{value:"TransactionExpiredNonceInvalidError"});class E{constructor(e,t){this.staticAccountKeys=void 0,this.accountKeysFromLookups=void 0,this.staticAccountKeys=e,this.accountKeysFromLookups=t}keySegments(){const e=[this.staticAccountKeys];return this.accountKeysFromLookups&&(e.push(this.accountKeysFromLookups.writable),e.push(this.accountKeysFromLookups.readonly)),e}get(e){for(const t of this.keySegments()){if(e<t.length)return t[e];e-=t.length}}get length(){return this.keySegments().flat().length}compileInstructions(e){if(this.length>256)throw new Error("Account index overflow encountered during compilation");const t=new Map;this.keySegments().flat().forEach(((e,r)=>{t.set(e.toBase58(),r)}));const r=e=>{const r=t.get(e.toBase58());if(void 0===r)throw new Error("Encountered an unknown instruction account key during compilation");return r};return e.map((e=>({programIdIndex:r(e.programId),accountKeyIndexes:e.keys.map((e=>r(e.pubkey))),data:e.data})))}}const C=(e="publicKey")=>(0,s.h)(32,e),B=(e="signature")=>(0,s.h)(64,e),T=(e="string")=>{const t=(0,s.g)([(0,s.k)("length"),(0,s.k)("lengthPadding"),(0,s.h)((0,s.o)((0,s.k)(),-8),"chars")],e),r=t.decode.bind(t),n=t.encode.bind(t),i=t;return i.decode=(e,t)=>r(e,t).chars.toString(),i.encode=(e,t,r)=>{const i={chars:s.b.Buffer.from(e,"utf8")};return n(i,t,r)},i.alloc=e=>(0,s.k)().span+(0,s.k)().span+s.b.Buffer.from(e,"utf8").length,i};function R(e,t){const r=e=>{if(e.span>=0)return e.span;if("function"==typeof e.alloc)return e.alloc(t[e.property]);if("count"in e&&"elementLayout"in e){const s=t[e.property];if(Array.isArray(s))return s.length*r(e.elementLayout)}else if("fields"in e)return R({layout:e},t[e.property]);return 0};let s=0;return e.layout.fields.forEach((e=>{s+=r(e)})),s}function z(e){let t=0,r=0;for(;;){let s=e.shift();if(t|=(127&s)<<7*r,r+=1,!(128&s))break}return t}function L(e,t){let r=t;for(;;){let t=127&r;if(r>>=7,0==r){e.push(t);break}t|=128,e.push(t)}}function K(e,t){if(!e)throw new Error(t||"Assertion failed")}class W{constructor(e,t){this.payer=void 0,this.keyMetaMap=void 0,this.payer=e,this.keyMetaMap=t}static compile(e,t){const r=new Map,s=e=>{const t=e.toBase58();let s=r.get(t);return void 0===s&&(s={isSigner:!1,isWritable:!1,isInvoked:!1},r.set(t,s)),s},n=s(t);n.isSigner=!0,n.isWritable=!0;for(const t of e){s(t.programId).isInvoked=!0;for(const e of t.keys){const t=s(e.pubkey);t.isSigner||=e.isSigner,t.isWritable||=e.isWritable}}return new W(t,r)}getMessageComponents(){const e=[...this.keyMetaMap.entries()];K(e.length<=256,"Max static account keys length exceeded");const t=e.filter((([,e])=>e.isSigner&&e.isWritable)),r=e.filter((([,e])=>e.isSigner&&!e.isWritable)),s=e.filter((([,e])=>!e.isSigner&&e.isWritable)),n=e.filter((([,e])=>!e.isSigner&&!e.isWritable)),i={numRequiredSignatures:t.length+r.length,numReadonlySignedAccounts:r.length,numReadonlyUnsignedAccounts:n.length};{K(t.length>0,"Expected at least one writable signer key");const[e]=t[0];K(e===this.payer.toBase58(),"Expected first writable signer key to be the fee payer")}return[i,[...t.map((([e])=>new f(e))),...r.map((([e])=>new f(e))),...s.map((([e])=>new f(e))),...n.map((([e])=>new f(e)))]]}extractTableLookup(e){const[t,r]=this.drainKeysFoundInLookupTable(e.state.addresses,(e=>!e.isSigner&&!e.isInvoked&&e.isWritable)),[s,n]=this.drainKeysFoundInLookupTable(e.state.addresses,(e=>!e.isSigner&&!e.isInvoked&&!e.isWritable));if(0!==t.length||0!==s.length)return[{accountKey:e.key,writableIndexes:t,readonlyIndexes:s},{writable:r,readonly:n}]}drainKeysFoundInLookupTable(e,t){const r=new Array,s=new Array;for(const[n,i]of this.keyMetaMap.entries())if(t(i)){const t=new f(n),i=e.findIndex((e=>e.equals(t)));i>=0&&(K(i<256,"Max lookup table index exceeded"),r.push(i),s.push(t),this.keyMetaMap.delete(n))}return[r,s]}}class O{constructor(e){this.header=void 0,this.accountKeys=void 0,this.recentBlockhash=void 0,this.instructions=void 0,this.indexToProgramIds=new Map,this.header=e.header,this.accountKeys=e.accountKeys.map((e=>new f(e))),this.recentBlockhash=e.recentBlockhash,this.instructions=e.instructions,this.instructions.forEach((e=>this.indexToProgramIds.set(e.programIdIndex,this.accountKeys[e.programIdIndex])))}get version(){return"legacy"}get staticAccountKeys(){return this.accountKeys}get compiledInstructions(){return this.instructions.map((e=>({programIdIndex:e.programIdIndex,accountKeyIndexes:e.accounts,data:s.c.decode(e.data)})))}get addressTableLookups(){return[]}getAccountKeys(){return new E(this.staticAccountKeys)}static compile(e){const t=W.compile(e.instructions,e.payerKey),[r,n]=t.getMessageComponents(),i=new E(n).compileInstructions(e.instructions).map((e=>({programIdIndex:e.programIdIndex,accounts:e.accountKeyIndexes,data:s.c.encode(e.data)})));return new O({header:r,accountKeys:n,recentBlockhash:e.recentBlockhash,instructions:i})}isAccountSigner(e){return e<this.header.numRequiredSignatures}isAccountWritable(e){const t=this.header.numRequiredSignatures;return e>=this.header.numRequiredSignatures?e-t<this.accountKeys.length-t-this.header.numReadonlyUnsignedAccounts:e<t-this.header.numReadonlySignedAccounts}isProgramId(e){return this.indexToProgramIds.has(e)}programIds(){return[...this.indexToProgramIds.values()]}nonProgramIds(){return this.accountKeys.filter(((e,t)=>!this.isProgramId(t)))}serialize(){const e=this.accountKeys.length;let t=[];L(t,e);const r=this.instructions.map((e=>{const{accounts:t,programIdIndex:r}=e,n=Array.from(s.c.decode(e.data));let i=[];L(i,t.length);let o=[];return L(o,n.length),{programIdIndex:r,keyIndicesCount:s.b.Buffer.from(i),keyIndices:t,dataLength:s.b.Buffer.from(o),data:n}}));let n=[];L(n,r.length);let i=s.b.Buffer.alloc(I);s.b.Buffer.from(n).copy(i);let o=n.length;r.forEach((e=>{const t=(0,s.g)([(0,s.u)("programIdIndex"),(0,s.h)(e.keyIndicesCount.length,"keyIndicesCount"),(0,s.j)((0,s.u)("keyIndex"),e.keyIndices.length,"keyIndices"),(0,s.h)(e.dataLength.length,"dataLength"),(0,s.j)((0,s.u)("userdatum"),e.data.length,"data")]).encode(e,i,o);o+=t})),i=i.slice(0,o);const a=(0,s.g)([(0,s.h)(1,"numRequiredSignatures"),(0,s.h)(1,"numReadonlySignedAccounts"),(0,s.h)(1,"numReadonlyUnsignedAccounts"),(0,s.h)(t.length,"keyCount"),(0,s.j)(C("key"),e,"keys"),C("recentBlockhash")]),c={numRequiredSignatures:s.b.Buffer.from([this.header.numRequiredSignatures]),numReadonlySignedAccounts:s.b.Buffer.from([this.header.numReadonlySignedAccounts]),numReadonlyUnsignedAccounts:s.b.Buffer.from([this.header.numReadonlyUnsignedAccounts]),keyCount:s.b.Buffer.from(t),keys:this.accountKeys.map((e=>d(e.toBytes()))),recentBlockhash:s.c.decode(this.recentBlockhash)};let u=s.b.Buffer.alloc(2048);const l=a.encode(c,u);return i.copy(u,l),u.slice(0,l+i.length)}static from(e){let t=[...e];const r=t.shift();if(r!==(r&A))throw new Error("Versioned messages must be deserialized with VersionedMessage.deserialize()");const n=t.shift(),i=t.shift(),o=z(t);let a=[];for(let e=0;e<o;e++){const e=t.slice(0,b);t=t.slice(b),a.push(new f(s.b.Buffer.from(e)))}const c=t.slice(0,b);t=t.slice(b);const u=z(t);let d=[];for(let e=0;e<u;e++){const e=t.shift(),r=z(t),n=t.slice(0,r);t=t.slice(r);const i=z(t),o=t.slice(0,i),a=s.c.encode(s.b.Buffer.from(o));t=t.slice(i),d.push({programIdIndex:e,accounts:n,data:a})}const l={header:{numRequiredSignatures:r,numReadonlySignedAccounts:n,numReadonlyUnsignedAccounts:i},recentBlockhash:s.c.encode(s.b.Buffer.from(c)),accountKeys:a,instructions:d};return new O(l)}}class N{constructor(e){this.header=void 0,this.staticAccountKeys=void 0,this.recentBlockhash=void 0,this.compiledInstructions=void 0,this.addressTableLookups=void 0,this.header=e.header,this.staticAccountKeys=e.staticAccountKeys,this.recentBlockhash=e.recentBlockhash,this.compiledInstructions=e.compiledInstructions,this.addressTableLookups=e.addressTableLookups}get version(){return 0}get numAccountKeysFromLookups(){let e=0;for(const t of this.addressTableLookups)e+=t.readonlyIndexes.length+t.writableIndexes.length;return e}getAccountKeys(e){let t;if(e&&"accountKeysFromLookups"in e&&e.accountKeysFromLookups){if(this.numAccountKeysFromLookups!=e.accountKeysFromLookups.writable.length+e.accountKeysFromLookups.readonly.length)throw new Error("Failed to get account keys because of a mismatch in the number of account keys from lookups");t=e.accountKeysFromLookups}else if(e&&"addressLookupTableAccounts"in e&&e.addressLookupTableAccounts)t=this.resolveAddressTableLookups(e.addressLookupTableAccounts);else if(this.addressTableLookups.length>0)throw new Error("Failed to get account keys because address table lookups were not resolved");return new E(this.staticAccountKeys,t)}isAccountSigner(e){return e<this.header.numRequiredSignatures}isAccountWritable(e){const t=this.header.numRequiredSignatures,r=this.staticAccountKeys.length;return e>=r?e-r<this.addressTableLookups.reduce(((e,t)=>e+t.writableIndexes.length),0):e>=this.header.numRequiredSignatures?e-t<r-t-this.header.numReadonlyUnsignedAccounts:e<t-this.header.numReadonlySignedAccounts}resolveAddressTableLookups(e){const t={writable:[],readonly:[]};for(const r of this.addressTableLookups){const s=e.find((e=>e.key.equals(r.accountKey)));if(!s)throw new Error(`Failed to find address lookup table account for table key ${r.accountKey.toBase58()}`);for(const e of r.writableIndexes){if(!(e<s.state.addresses.length))throw new Error(`Failed to find address for index ${e} in address lookup table ${r.accountKey.toBase58()}`);t.writable.push(s.state.addresses[e])}for(const e of r.readonlyIndexes){if(!(e<s.state.addresses.length))throw new Error(`Failed to find address for index ${e} in address lookup table ${r.accountKey.toBase58()}`);t.readonly.push(s.state.addresses[e])}}return t}static compile(e){const t=W.compile(e.instructions,e.payerKey),r=new Array,s={writable:new Array,readonly:new Array},n=e.addressLookupTableAccounts||[];for(const e of n){const n=t.extractTableLookup(e);if(void 0!==n){const[e,{writable:t,readonly:i}]=n;r.push(e),s.writable.push(...t),s.readonly.push(...i)}}const[i,o]=t.getMessageComponents(),a=new E(o,s).compileInstructions(e.instructions);return new N({header:i,staticAccountKeys:o,recentBlockhash:e.recentBlockhash,compiledInstructions:a,addressTableLookups:r})}serialize(){const e=Array();L(e,this.staticAccountKeys.length);const t=this.serializeInstructions(),r=Array();L(r,this.compiledInstructions.length);const n=this.serializeAddressTableLookups(),i=Array();L(i,this.addressTableLookups.length);const o=(0,s.g)([(0,s.u)("prefix"),(0,s.g)([(0,s.u)("numRequiredSignatures"),(0,s.u)("numReadonlySignedAccounts"),(0,s.u)("numReadonlyUnsignedAccounts")],"header"),(0,s.h)(e.length,"staticAccountKeysLength"),(0,s.j)(C(),this.staticAccountKeys.length,"staticAccountKeys"),C("recentBlockhash"),(0,s.h)(r.length,"instructionsLength"),(0,s.h)(t.length,"serializedInstructions"),(0,s.h)(i.length,"addressTableLookupsLength"),(0,s.h)(n.length,"serializedAddressTableLookups")]),a=new Uint8Array(I),c=o.encode({prefix:128,header:this.header,staticAccountKeysLength:new Uint8Array(e),staticAccountKeys:this.staticAccountKeys.map((e=>e.toBytes())),recentBlockhash:s.c.decode(this.recentBlockhash),instructionsLength:new Uint8Array(r),serializedInstructions:t,addressTableLookupsLength:new Uint8Array(i),serializedAddressTableLookups:n},a);return a.slice(0,c)}serializeInstructions(){let e=0;const t=new Uint8Array(I);for(const r of this.compiledInstructions){const n=Array();L(n,r.accountKeyIndexes.length);const i=Array();L(i,r.data.length),e+=(0,s.g)([(0,s.u)("programIdIndex"),(0,s.h)(n.length,"encodedAccountKeyIndexesLength"),(0,s.j)((0,s.u)(),r.accountKeyIndexes.length,"accountKeyIndexes"),(0,s.h)(i.length,"encodedDataLength"),(0,s.h)(r.data.length,"data")]).encode({programIdIndex:r.programIdIndex,encodedAccountKeyIndexesLength:new Uint8Array(n),accountKeyIndexes:r.accountKeyIndexes,encodedDataLength:new Uint8Array(i),data:r.data},t,e)}return t.slice(0,e)}serializeAddressTableLookups(){let e=0;const t=new Uint8Array(I);for(const r of this.addressTableLookups){const n=Array();L(n,r.writableIndexes.length);const i=Array();L(i,r.readonlyIndexes.length),e+=(0,s.g)([C("accountKey"),(0,s.h)(n.length,"encodedWritableIndexesLength"),(0,s.j)((0,s.u)(),r.writableIndexes.length,"writableIndexes"),(0,s.h)(i.length,"encodedReadonlyIndexesLength"),(0,s.j)((0,s.u)(),r.readonlyIndexes.length,"readonlyIndexes")]).encode({accountKey:r.accountKey.toBytes(),encodedWritableIndexesLength:new Uint8Array(n),writableIndexes:r.writableIndexes,encodedReadonlyIndexesLength:new Uint8Array(i),readonlyIndexes:r.readonlyIndexes},t,e)}return t.slice(0,e)}static deserialize(e){let t=[...e];const r=t.shift(),n=r&A;K(r!==n,"Expected versioned message but received legacy message"),K(0===n,`Expected versioned message with version 0 but found version ${n}`);const i={numRequiredSignatures:t.shift(),numReadonlySignedAccounts:t.shift(),numReadonlyUnsignedAccounts:t.shift()},o=[],a=z(t);for(let e=0;e<a;e++)o.push(new f(t.splice(0,b)));const c=s.c.encode(t.splice(0,b)),u=z(t),d=[];for(let e=0;e<u;e++){const e=t.shift(),r=z(t),s=t.splice(0,r),n=z(t),i=new Uint8Array(t.splice(0,n));d.push({programIdIndex:e,accountKeyIndexes:s,data:i})}const l=z(t),h=[];for(let e=0;e<l;e++){const e=new f(t.splice(0,b)),r=z(t),s=t.splice(0,r),n=z(t),i=t.splice(0,n);h.push({accountKey:e,writableIndexes:s,readonlyIndexes:i})}return new N({header:i,staticAccountKeys:o,recentBlockhash:c,compiledInstructions:d,addressTableLookups:h})}}const q={deserializeMessageVersion(e){const t=e[0],r=t&A;return r===t?"legacy":r},deserialize:e=>{const t=q.deserializeMessageVersion(e);if("legacy"===t)return O.from(e);if(0===t)return N.deserialize(e);throw new Error(`Transaction message version ${t} deserialization is not supported`)}};let U=((V={})[V.BLOCKHEIGHT_EXCEEDED=0]="BLOCKHEIGHT_EXCEEDED",V[V.PROCESSED=1]="PROCESSED",V[V.TIMED_OUT=2]="TIMED_OUT",V[V.NONCE_INVALID=3]="NONCE_INVALID",V);var V;const M=s.b.Buffer.alloc(_).fill(0);class D{constructor(e){this.keys=void 0,this.programId=void 0,this.data=s.b.Buffer.alloc(0),this.programId=e.programId,this.keys=e.keys,e.data&&(this.data=e.data)}toJSON(){return{keys:this.keys.map((({pubkey:e,isSigner:t,isWritable:r})=>({pubkey:e.toJSON(),isSigner:t,isWritable:r}))),programId:this.programId.toJSON(),data:[...this.data]}}}class H{get signature(){return this.signatures.length>0?this.signatures[0].signature:null}constructor(e){if(this.signatures=[],this.feePayer=void 0,this.instructions=[],this.recentBlockhash=void 0,this.lastValidBlockHeight=void 0,this.nonceInfo=void 0,this.minNonceContextSlot=void 0,this._message=void 0,this._json=void 0,e)if(e.feePayer&&(this.feePayer=e.feePayer),e.signatures&&(this.signatures=e.signatures),Object.prototype.hasOwnProperty.call(e,"nonceInfo")){const{minContextSlot:t,nonceInfo:r}=e;this.minNonceContextSlot=t,this.nonceInfo=r}else if(Object.prototype.hasOwnProperty.call(e,"lastValidBlockHeight")){const{blockhash:t,lastValidBlockHeight:r}=e;this.recentBlockhash=t,this.lastValidBlockHeight=r}else{const{recentBlockhash:t,nonceInfo:r}=e;r&&(this.nonceInfo=r),this.recentBlockhash=t}}toJSON(){return{recentBlockhash:this.recentBlockhash||null,feePayer:this.feePayer?this.feePayer.toJSON():null,nonceInfo:this.nonceInfo?{nonce:this.nonceInfo.nonce,nonceInstruction:this.nonceInfo.nonceInstruction.toJSON()}:null,instructions:this.instructions.map((e=>e.toJSON())),signers:this.signatures.map((({publicKey:e})=>e.toJSON()))}}add(...e){if(0===e.length)throw new Error("No instructions");return e.forEach((e=>{"instructions"in e?this.instructions=this.instructions.concat(e.instructions):"data"in e&&"programId"in e&&"keys"in e?this.instructions.push(e):this.instructions.push(new D(e))})),this}compileMessage(){if(this._message&&JSON.stringify(this.toJSON())===JSON.stringify(this._json))return this._message;let e,t,r;if(this.nonceInfo?(e=this.nonceInfo.nonce,t=this.instructions[0]!=this.nonceInfo.nonceInstruction?[this.nonceInfo.nonceInstruction,...this.instructions]:this.instructions):(e=this.recentBlockhash,t=this.instructions),!e)throw new Error("Transaction recentBlockhash required");if(t.length<1&&console.warn("No instructions provided"),this.feePayer)r=this.feePayer;else{if(!(this.signatures.length>0&&this.signatures[0].publicKey))throw new Error("Transaction fee payer required");r=this.signatures[0].publicKey}for(let e=0;e<t.length;e++)if(void 0===t[e].programId)throw new Error(`Transaction instruction index ${e} has undefined program id`);const n=[],i=[];t.forEach((e=>{e.keys.forEach((e=>{i.push({...e})}));const t=e.programId.toString();n.includes(t)||n.push(t)})),n.forEach((e=>{i.push({pubkey:new f(e),isSigner:!1,isWritable:!1})}));const o=[];i.forEach((e=>{const t=e.pubkey.toString(),r=o.findIndex((e=>e.pubkey.toString()===t));r>-1?(o[r].isWritable=o[r].isWritable||e.isWritable,o[r].isSigner=o[r].isSigner||e.isSigner):o.push(e)})),o.sort((function(e,t){return e.isSigner!==t.isSigner?e.isSigner?-1:1:e.isWritable!==t.isWritable?e.isWritable?-1:1:e.pubkey.toBase58().localeCompare(t.pubkey.toBase58(),"en",{localeMatcher:"best fit",usage:"sort",sensitivity:"variant",ignorePunctuation:!1,numeric:!1,caseFirst:"lower"})}));const a=o.findIndex((e=>e.pubkey.equals(r)));if(a>-1){const[e]=o.splice(a,1);e.isSigner=!0,e.isWritable=!0,o.unshift(e)}else o.unshift({pubkey:r,isSigner:!0,isWritable:!0});for(const e of this.signatures){const t=o.findIndex((t=>t.pubkey.equals(e.publicKey)));if(!(t>-1))throw new Error(`unknown signer: ${e.publicKey.toString()}`);o[t].isSigner||(o[t].isSigner=!0,console.warn("Transaction references a signature that is unnecessary, only the fee payer and instruction signer accounts should sign a transaction. This behavior is deprecated and will throw an error in the next major version release."))}let c=0,u=0,d=0;const l=[],h=[];o.forEach((({pubkey:e,isSigner:t,isWritable:r})=>{t?(l.push(e.toString()),c+=1,r||(u+=1)):(h.push(e.toString()),r||(d+=1))}));const g=l.concat(h),p=t.map((e=>{const{data:t,programId:r}=e;return{programIdIndex:g.indexOf(r.toString()),accounts:e.keys.map((e=>g.indexOf(e.pubkey.toString()))),data:s.c.encode(t)}}));return p.forEach((e=>{K(e.programIdIndex>=0),e.accounts.forEach((e=>K(e>=0)))})),new O({header:{numRequiredSignatures:c,numReadonlySignedAccounts:u,numReadonlyUnsignedAccounts:d},accountKeys:g,recentBlockhash:e,instructions:p})}_compile(){const e=this.compileMessage(),t=e.accountKeys.slice(0,e.header.numRequiredSignatures);return this.signatures.length===t.length&&this.signatures.every(((e,r)=>t[r].equals(e.publicKey)))||(this.signatures=t.map((e=>({signature:null,publicKey:e})))),e}serializeMessage(){return this._compile().serialize()}async getEstimatedFee(e){return(await e.getFeeForMessage(this.compileMessage())).value}setSigners(...e){if(0===e.length)throw new Error("No signers");const t=new Set;this.signatures=e.filter((e=>{const r=e.toString();return!t.has(r)&&(t.add(r),!0)})).map((e=>({signature:null,publicKey:e})))}sign(...e){if(0===e.length)throw new Error("No signers");const t=new Set,r=[];for(const s of e){const e=s.publicKey.toString();t.has(e)||(t.add(e),r.push(s))}this.signatures=r.map((e=>({signature:null,publicKey:e.publicKey})));const s=this._compile();this._partialSign(s,...r)}partialSign(...e){if(0===e.length)throw new Error("No signers");const t=new Set,r=[];for(const s of e){const e=s.publicKey.toString();t.has(e)||(t.add(e),r.push(s))}const s=this._compile();this._partialSign(s,...r)}_partialSign(e,...t){const r=e.serialize();t.forEach((e=>{const t=c(r,e.secretKey);this._addSignature(e.publicKey,d(t))}))}addSignature(e,t){this._compile(),this._addSignature(e,t)}_addSignature(e,t){K(64===t.length);const r=this.signatures.findIndex((t=>e.equals(t.publicKey)));if(r<0)throw new Error(`unknown signer: ${e.toString()}`);this.signatures[r].signature=s.b.Buffer.from(t)}verifySignatures(e=!0){return!this._getMessageSignednessErrors(this.serializeMessage(),e)}_getMessageSignednessErrors(e,t){const r={};for(const{signature:s,publicKey:n}of this.signatures)null===s?t&&(r.missing||=[]).push(n):u(s,e,n.toBytes())||(r.invalid||=[]).push(n);return r.invalid||r.missing?r:void 0}serialize(e){const{requireAllSignatures:t,verifySignatures:r}=Object.assign({requireAllSignatures:!0,verifySignatures:!0},e),s=this.serializeMessage();if(r){const e=this._getMessageSignednessErrors(s,t);if(e){let t="Signature verification failed.";throw e.invalid&&(t+=`\nInvalid signature for public key${1===e.invalid.length?"":"(s)"} [\`${e.invalid.map((e=>e.toBase58())).join("`, `")}\`].`),e.missing&&(t+=`\nMissing signature for public key${1===e.missing.length?"":"(s)"} [\`${e.missing.map((e=>e.toBase58())).join("`, `")}\`].`),new Error(t)}}return this._serialize(s)}_serialize(e){const{signatures:t}=this,r=[];L(r,t.length);const n=r.length+64*t.length+e.length,i=s.b.Buffer.alloc(n);return K(t.length<256),s.b.Buffer.from(r).copy(i,0),t.forEach((({signature:e},t)=>{null!==e&&(K(64===e.length,"signature has invalid length"),s.b.Buffer.from(e).copy(i,r.length+64*t))})),e.copy(i,r.length+64*t.length),K(i.length<=I,`Transaction too large: ${i.length} > 1232`),i}get keys(){return K(1===this.instructions.length),this.instructions[0].keys.map((e=>e.pubkey))}get programId(){return K(1===this.instructions.length),this.instructions[0].programId}get data(){return K(1===this.instructions.length),this.instructions[0].data}static from(e){let t=[...e];const r=z(t);let n=[];for(let e=0;e<r;e++){const e=t.slice(0,_);t=t.slice(_),n.push(s.c.encode(s.b.Buffer.from(e)))}return H.populate(O.from(t),n)}static populate(e,t=[]){const r=new H;return r.recentBlockhash=e.recentBlockhash,e.header.numRequiredSignatures>0&&(r.feePayer=e.accountKeys[0]),t.forEach(((t,n)=>{const i={signature:t==s.c.encode(M)?null:s.c.decode(t),publicKey:e.accountKeys[n]};r.signatures.push(i)})),e.instructions.forEach((t=>{const n=t.accounts.map((t=>{const s=e.accountKeys[t];return{pubkey:s,isSigner:r.signatures.some((e=>e.publicKey.toString()===s.toString()))||e.isAccountSigner(t),isWritable:e.isAccountWritable(t)}}));r.instructions.push(new D({keys:n,programId:e.accountKeys[t.programIdIndex],data:s.c.decode(t.data)}))})),r._message=e,r._json=r.toJSON(),r}}class F{constructor(e){this.payerKey=void 0,this.instructions=void 0,this.recentBlockhash=void 0,this.payerKey=e.payerKey,this.instructions=e.instructions,this.recentBlockhash=e.recentBlockhash}static decompile(e,t){const{header:r,compiledInstructions:s,recentBlockhash:n}=e,{numRequiredSignatures:i,numReadonlySignedAccounts:o,numReadonlyUnsignedAccounts:a}=r,c=i-o;K(c>0,"Message header is invalid");const u=e.staticAccountKeys.length-i-a;K(u>=0,"Message header is invalid");const l=e.getAccountKeys(t),h=l.get(0);if(void 0===h)throw new Error("Failed to decompile message because no account keys were found");const g=[];for(const e of s){const t=[];for(const s of e.accountKeyIndexes){const e=l.get(s);if(void 0===e)throw new Error(`Failed to find key for account key index ${s}`);let n;n=s<i?s<c:s<l.staticAccountKeys.length?s-i<u:s-l.staticAccountKeys.length<l.accountKeysFromLookups.writable.length,t.push({pubkey:e,isSigner:s<r.numRequiredSignatures,isWritable:n})}const s=l.get(e.programIdIndex);if(void 0===s)throw new Error(`Failed to find program id for program id index ${e.programIdIndex}`);g.push(new D({programId:s,data:d(e.data),keys:t}))}return new F({payerKey:h,instructions:g,recentBlockhash:n})}compileToLegacyMessage(){return O.compile({payerKey:this.payerKey,recentBlockhash:this.recentBlockhash,instructions:this.instructions})}compileToV0Message(e){return N.compile({payerKey:this.payerKey,recentBlockhash:this.recentBlockhash,instructions:this.instructions,addressLookupTableAccounts:e})}}class ${get version(){return this.message.version}constructor(e,t){if(this.signatures=void 0,this.message=void 0,void 0!==t)K(t.length===e.header.numRequiredSignatures,"Expected signatures length to be equal to the number of required signatures"),this.signatures=t;else{const t=[];for(let r=0;r<e.header.numRequiredSignatures;r++)t.push(new Uint8Array(_));this.signatures=t}this.message=e}serialize(){const e=this.message.serialize(),t=Array();L(t,this.signatures.length);const r=(0,s.g)([(0,s.h)(t.length,"encodedSignaturesLength"),(0,s.j)(B(),this.signatures.length,"signatures"),(0,s.h)(e.length,"serializedMessage")]),n=new Uint8Array(2048),i=r.encode({encodedSignaturesLength:new Uint8Array(t),signatures:this.signatures,serializedMessage:e},n);return n.slice(0,i)}static deserialize(e){let t=[...e];const r=[],s=z(t);for(let e=0;e<s;e++)r.push(new Uint8Array(t.splice(0,_)));const n=q.deserialize(new Uint8Array(t));return new $(n,r)}sign(e){const t=this.message.serialize(),r=this.message.staticAccountKeys.slice(0,this.message.header.numRequiredSignatures);for(const s of e){const e=r.findIndex((e=>e.equals(s.publicKey)));K(e>=0,`Cannot sign with non signer key ${s.publicKey.toBase58()}`),this.signatures[e]=c(t,s.secretKey)}}addSignature(e,t){K(64===t.byteLength,"Signature must be 64 bytes long");const r=this.message.staticAccountKeys.slice(0,this.message.header.numRequiredSignatures).findIndex((t=>t.equals(e)));K(r>=0,`Can not add signature; \`${e.toBase58()}\` is not required to sign this transaction`),this.signatures[r]=t}}const j=new f("SysvarC1ock11111111111111111111111111111111"),J=new f("SysvarEpochSchedu1e111111111111111111111111"),G=new f("Sysvar1nstructions1111111111111111111111111"),Y=new f("SysvarRecentB1ockHashes11111111111111111111"),X=new f("SysvarRent111111111111111111111111111111111"),Z=new f("SysvarRewards111111111111111111111111111111"),Q=new f("SysvarS1otHashes111111111111111111111111111"),ee=new f("SysvarS1otHistory11111111111111111111111111"),te=new f("SysvarStakeHistory1111111111111111111111111");async function re(e,t,r,s){const n=s&&{skipPreflight:s.skipPreflight,preflightCommitment:s.preflightCommitment||s.commitment,maxRetries:s.maxRetries,minContextSlot:s.minContextSlot},i=await e.sendTransaction(t,r,n);let o;if(null!=t.recentBlockhash&&null!=t.lastValidBlockHeight)o=(await e.confirmTransaction({abortSignal:s?.abortSignal,signature:i,blockhash:t.recentBlockhash,lastValidBlockHeight:t.lastValidBlockHeight},s&&s.commitment)).value;else if(null!=t.minNonceContextSlot&&null!=t.nonceInfo){const{nonceInstruction:r}=t.nonceInfo,n=r.keys[0].pubkey;o=(await e.confirmTransaction({abortSignal:s?.abortSignal,minContextSlot:t.minNonceContextSlot,nonceAccountPubkey:n,nonceValue:t.nonceInfo.nonce,signature:i},s&&s.commitment)).value}else null!=s?.abortSignal&&console.warn("sendAndConfirmTransaction(): A transaction with a deprecated confirmation strategy was supplied along with an `abortSignal`. Only transactions having `lastValidBlockHeight` or a combination of `nonceInfo` and `minNonceContextSlot` are abortable."),o=(await e.confirmTransaction(i,s&&s.commitment)).value;if(o.err)throw new Error(`Transaction ${i} failed (${JSON.stringify(o)})`);return i}function se(e){return new Promise((t=>setTimeout(t,e)))}function ne(e,t){const r=e.layout.span>=0?e.layout.span:R(e,t),n=s.b.Buffer.alloc(r),i=Object.assign({instruction:e.index},t);return e.layout.encode(i,n),n}function ie(e,t){let r;try{r=e.layout.decode(t)}catch(e){throw new Error("invalid instruction; "+e)}if(r.instruction!==e.index)throw new Error(`invalid instruction; instruction index mismatch ${r.instruction} != ${e.index}`);return r}const oe=(0,s.n)("lamportsPerSignature"),ae=(0,s.g)([(0,s.k)("version"),(0,s.k)("state"),C("authorizedPubkey"),C("nonce"),(0,s.g)([oe],"feeCalculator")]),ce=ae.span;class ue{constructor(e){this.authorizedPubkey=void 0,this.nonce=void 0,this.feeCalculator=void 0,this.authorizedPubkey=e.authorizedPubkey,this.nonce=e.nonce,this.feeCalculator=e.feeCalculator}static fromAccountData(e){const t=ae.decode(d(e),0);return new ue({authorizedPubkey:new f(t.authorizedPubkey),nonce:new f(t.nonce).toString(),feeCalculator:t.feeCalculator})}}const de=e=>{const t=(0,s.h)(8,e),{encode:r,decode:n}=(e=>({decode:e.decode.bind(e),encode:e.encode.bind(e)}))(t),i=t;return i.decode=(e,t)=>{const r=n(e,t);return(0,s.N)(s.b.Buffer.from(r))},i.encode=(e,t,n)=>{const i=(0,s.D)(e,8);return r(i,t,n)},i};class le{constructor(){}static decodeInstructionType(e){this.checkProgramId(e.programId);const t=(0,s.k)("instruction").decode(e.data);let r;for(const[e,s]of Object.entries(he))if(s.index==t){r=e;break}if(!r)throw new Error("Instruction type incorrect; not a SystemInstruction");return r}static decodeCreateAccount(e){this.checkProgramId(e.programId),this.checkKeyLength(e.keys,2);const{lamports:t,space:r,programId:s}=ie(he.Create,e.data);return{fromPubkey:e.keys[0].pubkey,newAccountPubkey:e.keys[1].pubkey,lamports:t,space:r,programId:new f(s)}}static decodeTransfer(e){this.checkProgramId(e.programId),this.checkKeyLength(e.keys,2);const{lamports:t}=ie(he.Transfer,e.data);return{fromPubkey:e.keys[0].pubkey,toPubkey:e.keys[1].pubkey,lamports:t}}static decodeTransferWithSeed(e){this.checkProgramId(e.programId),this.checkKeyLength(e.keys,3);const{lamports:t,seed:r,programId:s}=ie(he.TransferWithSeed,e.data);return{fromPubkey:e.keys[0].pubkey,basePubkey:e.keys[1].pubkey,toPubkey:e.keys[2].pubkey,lamports:t,seed:r,programId:new f(s)}}static decodeAllocate(e){this.checkProgramId(e.programId),this.checkKeyLength(e.keys,1);const{space:t}=ie(he.Allocate,e.data);return{accountPubkey:e.keys[0].pubkey,space:t}}static decodeAllocateWithSeed(e){this.checkProgramId(e.programId),this.checkKeyLength(e.keys,1);const{base:t,seed:r,space:s,programId:n}=ie(he.AllocateWithSeed,e.data);return{accountPubkey:e.keys[0].pubkey,basePubkey:new f(t),seed:r,space:s,programId:new f(n)}}static decodeAssign(e){this.checkProgramId(e.programId),this.checkKeyLength(e.keys,1);const{programId:t}=ie(he.Assign,e.data);return{accountPubkey:e.keys[0].pubkey,programId:new f(t)}}static decodeAssignWithSeed(e){this.checkProgramId(e.programId),this.checkKeyLength(e.keys,1);const{base:t,seed:r,programId:s}=ie(he.AssignWithSeed,e.data);return{accountPubkey:e.keys[0].pubkey,basePubkey:new f(t),seed:r,programId:new f(s)}}static decodeCreateWithSeed(e){this.checkProgramId(e.programId),this.checkKeyLength(e.keys,2);const{base:t,seed:r,lamports:s,space:n,programId:i}=ie(he.CreateWithSeed,e.data);return{fromPubkey:e.keys[0].pubkey,newAccountPubkey:e.keys[1].pubkey,basePubkey:new f(t),seed:r,lamports:s,space:n,programId:new f(i)}}static decodeNonceInitialize(e){this.checkProgramId(e.programId),this.checkKeyLength(e.keys,3);const{authorized:t}=ie(he.InitializeNonceAccount,e.data);return{noncePubkey:e.keys[0].pubkey,authorizedPubkey:new f(t)}}static decodeNonceAdvance(e){return this.checkProgramId(e.programId),this.checkKeyLength(e.keys,3),ie(he.AdvanceNonceAccount,e.data),{noncePubkey:e.keys[0].pubkey,authorizedPubkey:e.keys[2].pubkey}}static decodeNonceWithdraw(e){this.checkProgramId(e.programId),this.checkKeyLength(e.keys,5);const{lamports:t}=ie(he.WithdrawNonceAccount,e.data);return{noncePubkey:e.keys[0].pubkey,toPubkey:e.keys[1].pubkey,authorizedPubkey:e.keys[4].pubkey,lamports:t}}static decodeNonceAuthorize(e){this.checkProgramId(e.programId),this.checkKeyLength(e.keys,2);const{authorized:t}=ie(he.AuthorizeNonceAccount,e.data);return{noncePubkey:e.keys[0].pubkey,authorizedPubkey:e.keys[1].pubkey,newAuthorizedPubkey:new f(t)}}static checkProgramId(e){if(!e.equals(ge.programId))throw new Error("invalid instruction; programId is not SystemProgram")}static checkKeyLength(e,t){if(e.length<t)throw new Error(`invalid instruction; found ${e.length} keys, expected at least ${t}`)}}const he=Object.freeze({Create:{index:0,layout:(0,s.g)([(0,s.k)("instruction"),(0,s.l)("lamports"),(0,s.l)("space"),C("programId")])},Assign:{index:1,layout:(0,s.g)([(0,s.k)("instruction"),C("programId")])},Transfer:{index:2,layout:(0,s.g)([(0,s.k)("instruction"),de("lamports")])},CreateWithSeed:{index:3,layout:(0,s.g)([(0,s.k)("instruction"),C("base"),T("seed"),(0,s.l)("lamports"),(0,s.l)("space"),C("programId")])},AdvanceNonceAccount:{index:4,layout:(0,s.g)([(0,s.k)("instruction")])},WithdrawNonceAccount:{index:5,layout:(0,s.g)([(0,s.k)("instruction"),(0,s.l)("lamports")])},InitializeNonceAccount:{index:6,layout:(0,s.g)([(0,s.k)("instruction"),C("authorized")])},AuthorizeNonceAccount:{index:7,layout:(0,s.g)([(0,s.k)("instruction"),C("authorized")])},Allocate:{index:8,layout:(0,s.g)([(0,s.k)("instruction"),(0,s.l)("space")])},AllocateWithSeed:{index:9,layout:(0,s.g)([(0,s.k)("instruction"),C("base"),T("seed"),(0,s.l)("space"),C("programId")])},AssignWithSeed:{index:10,layout:(0,s.g)([(0,s.k)("instruction"),C("base"),T("seed"),C("programId")])},TransferWithSeed:{index:11,layout:(0,s.g)([(0,s.k)("instruction"),de("lamports"),T("seed"),C("programId")])},UpgradeNonceAccount:{index:12,layout:(0,s.g)([(0,s.k)("instruction")])}});class ge{constructor(){}static createAccount(e){const t=ne(he.Create,{lamports:e.lamports,space:e.space,programId:d(e.programId.toBuffer())});return new D({keys:[{pubkey:e.fromPubkey,isSigner:!0,isWritable:!0},{pubkey:e.newAccountPubkey,isSigner:!0,isWritable:!0}],programId:this.programId,data:t})}static transfer(e){let t,r;return"basePubkey"in e?(t=ne(he.TransferWithSeed,{lamports:BigInt(e.lamports),seed:e.seed,programId:d(e.programId.toBuffer())}),r=[{pubkey:e.fromPubkey,isSigner:!1,isWritable:!0},{pubkey:e.basePubkey,isSigner:!0,isWritable:!1},{pubkey:e.toPubkey,isSigner:!1,isWritable:!0}]):(t=ne(he.Transfer,{lamports:BigInt(e.lamports)}),r=[{pubkey:e.fromPubkey,isSigner:!0,isWritable:!0},{pubkey:e.toPubkey,isSigner:!1,isWritable:!0}]),new D({keys:r,programId:this.programId,data:t})}static assign(e){let t,r;return"basePubkey"in e?(t=ne(he.AssignWithSeed,{base:d(e.basePubkey.toBuffer()),seed:e.seed,programId:d(e.programId.toBuffer())}),r=[{pubkey:e.accountPubkey,isSigner:!1,isWritable:!0},{pubkey:e.basePubkey,isSigner:!0,isWritable:!1}]):(t=ne(he.Assign,{programId:d(e.programId.toBuffer())}),r=[{pubkey:e.accountPubkey,isSigner:!0,isWritable:!0}]),new D({keys:r,programId:this.programId,data:t})}static createAccountWithSeed(e){const t=ne(he.CreateWithSeed,{base:d(e.basePubkey.toBuffer()),seed:e.seed,lamports:e.lamports,space:e.space,programId:d(e.programId.toBuffer())});let r=[{pubkey:e.fromPubkey,isSigner:!0,isWritable:!0},{pubkey:e.newAccountPubkey,isSigner:!1,isWritable:!0}];return e.basePubkey!=e.fromPubkey&&r.push({pubkey:e.basePubkey,isSigner:!0,isWritable:!1}),new D({keys:r,programId:this.programId,data:t})}static createNonceAccount(e){const t=new H;"basePubkey"in e&&"seed"in e?t.add(ge.createAccountWithSeed({fromPubkey:e.fromPubkey,newAccountPubkey:e.noncePubkey,basePubkey:e.basePubkey,seed:e.seed,lamports:e.lamports,space:ce,programId:this.programId})):t.add(ge.createAccount({fromPubkey:e.fromPubkey,newAccountPubkey:e.noncePubkey,lamports:e.lamports,space:ce,programId:this.programId}));const r={noncePubkey:e.noncePubkey,authorizedPubkey:e.authorizedPubkey};return t.add(this.nonceInitialize(r)),t}static nonceInitialize(e){const t=ne(he.InitializeNonceAccount,{authorized:d(e.authorizedPubkey.toBuffer())}),r={keys:[{pubkey:e.noncePubkey,isSigner:!1,isWritable:!0},{pubkey:Y,isSigner:!1,isWritable:!1},{pubkey:X,isSigner:!1,isWritable:!1}],programId:this.programId,data:t};return new D(r)}static nonceAdvance(e){const t=ne(he.AdvanceNonceAccount),r={keys:[{pubkey:e.noncePubkey,isSigner:!1,isWritable:!0},{pubkey:Y,isSigner:!1,isWritable:!1},{pubkey:e.authorizedPubkey,isSigner:!0,isWritable:!1}],programId:this.programId,data:t};return new D(r)}static nonceWithdraw(e){const t=ne(he.WithdrawNonceAccount,{lamports:e.lamports});return new D({keys:[{pubkey:e.noncePubkey,isSigner:!1,isWritable:!0},{pubkey:e.toPubkey,isSigner:!1,isWritable:!0},{pubkey:Y,isSigner:!1,isWritable:!1},{pubkey:X,isSigner:!1,isWritable:!1},{pubkey:e.authorizedPubkey,isSigner:!0,isWritable:!1}],programId:this.programId,data:t})}static nonceAuthorize(e){const t=ne(he.AuthorizeNonceAccount,{authorized:d(e.newAuthorizedPubkey.toBuffer())});return new D({keys:[{pubkey:e.noncePubkey,isSigner:!1,isWritable:!0},{pubkey:e.authorizedPubkey,isSigner:!0,isWritable:!1}],programId:this.programId,data:t})}static allocate(e){let t,r;return"basePubkey"in e?(t=ne(he.AllocateWithSeed,{base:d(e.basePubkey.toBuffer()),seed:e.seed,space:e.space,programId:d(e.programId.toBuffer())}),r=[{pubkey:e.accountPubkey,isSigner:!1,isWritable:!0},{pubkey:e.basePubkey,isSigner:!0,isWritable:!1}]):(t=ne(he.Allocate,{space:e.space}),r=[{pubkey:e.accountPubkey,isSigner:!0,isWritable:!0}]),new D({keys:r,programId:this.programId,data:t})}}ge.programId=new f("11111111111111111111111111111111");class pe{constructor(){}static getMinNumSignatures(e){return 2*(Math.ceil(e/pe.chunkSize)+1+1)}static async load(e,t,r,n,i){{const s=await e.getMinimumBalanceForRentExemption(i.length),o=await e.getAccountInfo(r.publicKey,"confirmed");let a=null;if(null!==o){if(o.executable)return console.error("Program load failed, account is already executable"),!1;o.data.length!==i.length&&(a=a||new H,a.add(ge.allocate({accountPubkey:r.publicKey,space:i.length}))),o.owner.equals(n)||(a=a||new H,a.add(ge.assign({accountPubkey:r.publicKey,programId:n}))),o.lamports<s&&(a=a||new H,a.add(ge.transfer({fromPubkey:t.publicKey,toPubkey:r.publicKey,lamports:s-o.lamports})))}else a=(new H).add(ge.createAccount({fromPubkey:t.publicKey,newAccountPubkey:r.publicKey,lamports:s>0?s:1,space:i.length,programId:n}));null!==a&&await re(e,a,[t,r],{commitment:"confirmed"})}const o=(0,s.g)([(0,s.k)("instruction"),(0,s.k)("offset"),(0,s.k)("bytesLength"),(0,s.k)("bytesLengthPadding"),(0,s.j)((0,s.u)("byte"),(0,s.o)((0,s.k)(),-8),"bytes")]),a=pe.chunkSize;let c=0,u=i,d=[];for(;u.length>0;){const i=u.slice(0,a),l=s.b.Buffer.alloc(a+16);o.encode({instruction:0,offset:c,bytes:i,bytesLength:0,bytesLengthPadding:0},l);const h=(new H).add({keys:[{pubkey:r.publicKey,isSigner:!0,isWritable:!0}],programId:n,data:l});if(d.push(re(e,h,[t,r],{commitment:"confirmed"})),e._rpcEndpoint.includes("solana.com")){const e=4;await se(1e3/e)}c+=a,u=u.slice(a)}await Promise.all(d);{const i=(0,s.g)([(0,s.k)("instruction")]),o=s.b.Buffer.alloc(i.span);i.encode({instruction:1},o);const a=(new H).add({keys:[{pubkey:r.publicKey,isSigner:!0,isWritable:!0},{pubkey:X,isSigner:!1,isWritable:!1}],programId:n,data:o}),c="processed",u=await e.sendTransaction(a,[t,r],{preflightCommitment:c}),{context:d,value:l}=await e.confirmTransaction({signature:u,lastValidBlockHeight:a.lastValidBlockHeight,blockhash:a.recentBlockhash},c);if(l.err)throw new Error(`Transaction ${u} failed (${JSON.stringify(l)})`);for(;;){try{if(await e.getSlot({commitment:c})>d.slot)break}catch{}await new Promise((e=>setTimeout(e,Math.round(200))))}}return!0}}pe.chunkSize=932;const ye=new f("BPFLoader2111111111111111111111111111111111");class me{static getMinNumSignatures(e){return pe.getMinNumSignatures(e)}static load(e,t,r,s,n){return pe.load(e,t,r,n,s)}}var be=Object.prototype.toString,ke=Object.keys||function(e){var t=[];for(var r in e)t.push(r);return t};function fe(e,t){var r,s,n,i,o,a,c;if(!0===e)return"true";if(!1===e)return"false";switch(typeof e){case"object":if(null===e)return null;if(e.toJSON&&"function"==typeof e.toJSON)return fe(e.toJSON(),t);if("[object Array]"===(c=be.call(e))){for(n="[",s=e.length-1,r=0;r<s;r++)n+=fe(e[r],!0)+",";return s>-1&&(n+=fe(e[r],!0)),n+"]"}if("[object Object]"===c){for(s=(i=ke(e).sort()).length,n="",r=0;r<s;)void 0!==(a=fe(e[o=i[r]],!1))&&(n&&(n+=","),n+=JSON.stringify(o)+":"+a),r++;return"{"+n+"}"}return JSON.stringify(e);case"function":case"undefined":return t?null:void 0;case"string":return JSON.stringify(e);default:return isFinite(e)?e:null}}var we=function(e){return e&&e.__esModule&&Object.prototype.hasOwnProperty.call(e,"default")?e.default:e}((function(e){var t=fe(e,!1);if(void 0!==t)return""+t}));function Se(e){let t=0;for(;e>1;)e/=2,t++;return t}class Ie{constructor(e,t,r,s,n){this.slotsPerEpoch=void 0,this.leaderScheduleSlotOffset=void 0,this.warmup=void 0,this.firstNormalEpoch=void 0,this.firstNormalSlot=void 0,this.slotsPerEpoch=e,this.leaderScheduleSlotOffset=t,this.warmup=r,this.firstNormalEpoch=s,this.firstNormalSlot=n}getEpoch(e){return this.getEpochAndSlotIndex(e)[0]}getEpochAndSlotIndex(e){if(e<this.firstNormalSlot){const r=Se(0===(t=e+32+1)?1:(t--,t|=t>>1,t|=t>>2,t|=t>>4,t|=t>>8,t|=t>>16,1+(t|=t>>32)))-Se(32)-1;return[r,e-(this.getSlotsInEpoch(r)-32)]}{const t=e-this.firstNormalSlot,r=Math.floor(t/this.slotsPerEpoch);return[this.firstNormalEpoch+r,t%this.slotsPerEpoch]}var t}getFirstSlotInEpoch(e){return e<=this.firstNormalEpoch?32*(Math.pow(2,e)-1):(e-this.firstNormalEpoch)*this.slotsPerEpoch+this.firstNormalSlot}getLastSlotInEpoch(e){return this.getFirstSlotInEpoch(e)+this.getSlotsInEpoch(e)-1}getSlotsInEpoch(e){return e<this.firstNormalEpoch?Math.pow(2,e+Se(32)):this.slotsPerEpoch}}class Ae extends Error{constructor(e,t){super(e),this.logs=void 0,this.logs=t}}const _e={JSON_RPC_SERVER_ERROR_BLOCK_CLEANED_UP:-32001,JSON_RPC_SERVER_ERROR_SEND_TRANSACTION_PREFLIGHT_FAILURE:-32002,JSON_RPC_SERVER_ERROR_TRANSACTION_SIGNATURE_VERIFICATION_FAILURE:-32003,JSON_RPC_SERVER_ERROR_BLOCK_NOT_AVAILABLE:-32004,JSON_RPC_SERVER_ERROR_NODE_UNHEALTHY:-32005,JSON_RPC_SERVER_ERROR_TRANSACTION_PRECOMPILE_VERIFICATION_FAILURE:-32006,JSON_RPC_SERVER_ERROR_SLOT_SKIPPED:-32007,JSON_RPC_SERVER_ERROR_NO_SNAPSHOT:-32008,JSON_RPC_SERVER_ERROR_LONG_TERM_STORAGE_SLOT_SKIPPED:-32009,JSON_RPC_SERVER_ERROR_KEY_EXCLUDED_FROM_SECONDARY_INDEX:-32010,JSON_RPC_SERVER_ERROR_TRANSACTION_HISTORY_NOT_AVAILABLE:-32011,JSON_RPC_SCAN_ERROR:-32012,JSON_RPC_SERVER_ERROR_TRANSACTION_SIGNATURE_LEN_MISMATCH:-32013,JSON_RPC_SERVER_ERROR_BLOCK_STATUS_NOT_AVAILABLE_YET:-32014,JSON_RPC_SERVER_ERROR_UNSUPPORTED_TRANSACTION_VERSION:-32015,JSON_RPC_SERVER_ERROR_MIN_CONTEXT_SLOT_NOT_REACHED:-32016};class ve extends Error{constructor({code:e,message:t,data:r},s){super(null!=s?`${s}: ${t}`:t),this.code=void 0,this.data=void 0,this.code=e,this.data=r,this.name="SolanaJSONRPCError"}}var xe=globalThis.fetch;class Pe extends s.R{constructor(e,t,r){super((e=>{const r=(0,s.O)(e,{autoconnect:!0,max_reconnects:5,reconnect:!0,reconnect_interval:1e3,...t});return this.underlyingSocket="socket"in r?r.socket:r,r}),e,t,r),this.underlyingSocket=void 0}call(...e){const t=this.underlyingSocket?.readyState;return 1===t?super.call(...e):Promise.reject(new Error("Tried to call a JSON-RPC method `"+e[0]+"` but the socket was not `CONNECTING` or `OPEN` (`readyState` was "+t+")"))}notify(...e){const t=this.underlyingSocket?.readyState;return 1===t?super.notify(...e):Promise.reject(new Error("Tried to send a JSON-RPC notification `"+e[0]+"` but the socket was not `CONNECTING` or `OPEN` (`readyState` was "+t+")"))}}class Ee{constructor(e){this.key=void 0,this.state=void 0,this.key=e.key,this.state=e.state}isActive(){const e=BigInt("0xffffffffffffffff");return this.state.deactivationSlot===e}static deserialize(e){const t=function(e,t){let r;try{r=e.layout.decode(t)}catch(e){throw new Error("invalid instruction; "+e)}if(r.typeIndex!==e.index)throw new Error(`invalid account data; account type mismatch ${r.typeIndex} != ${e.index}`);return r}(Ce,e),r=e.length-56;K(r>=0,"lookup table is invalid"),K(r%32==0,"lookup table is invalid");const n=r/32,{addresses:i}=(0,s.g)([(0,s.j)(C(),n,"addresses")]).decode(e.slice(56));return{deactivationSlot:t.deactivationSlot,lastExtendedSlot:t.lastExtendedSlot,lastExtendedSlotStartIndex:t.lastExtendedStartIndex,authority:0!==t.authority.length?new f(t.authority[0]):void 0,addresses:i.map((e=>new f(e)))}}}const Ce={index:1,layout:(0,s.g)([(0,s.k)("typeIndex"),de("deactivationSlot"),(0,s.n)("lastExtendedSlot"),(0,s.u)("lastExtendedStartIndex"),(0,s.u)(),(0,s.j)(C(),(0,s.o)((0,s.u)(),-1),"authority")])},Be=/^[^:]+:\/\/([^:[]+|\[[^\]]+\])(:\d+)?(.*)/i,Te=(0,s.m)((0,s.H)(f),(0,s.p)(),(e=>new f(e))),Re=(0,s.t)([(0,s.p)(),(0,s.q)("base64")]),ze=(0,s.m)((0,s.H)(s.b.Buffer),Re,(e=>s.b.Buffer.from(e[0],"base64"))),Le=3e4;function Ke(e){let t,r;if("string"==typeof e)t=e;else if(e){const{commitment:s,...n}=e;t=s,r=n}return{commitment:t,config:r}}function We(e){return(0,s.z)([(0,s.w)({jsonrpc:(0,s.q)("2.0"),id:(0,s.p)(),result:e}),(0,s.w)({jsonrpc:(0,s.q)("2.0"),id:(0,s.p)(),error:(0,s.w)({code:(0,s.I)(),message:(0,s.p)(),data:(0,s.y)((0,s.J)())})})])}const Oe=We((0,s.I)());function Ne(e){return(0,s.m)(We(e),Oe,(t=>"error"in t?t:{...t,result:(0,s.C)(t.result,e)}))}function qe(e){return Ne((0,s.w)({context:(0,s.w)({slot:(0,s.x)()}),value:e}))}function Ue(e){return(0,s.w)({context:(0,s.w)({slot:(0,s.x)()}),value:e})}function Ve(e,t){return 0===e?new N({header:t.header,staticAccountKeys:t.accountKeys.map((e=>new f(e))),recentBlockhash:t.recentBlockhash,compiledInstructions:t.instructions.map((e=>({programIdIndex:e.programIdIndex,accountKeyIndexes:e.accounts,data:s.c.decode(e.data)}))),addressTableLookups:t.addressTableLookups}):new O(t)}const Me=(0,s.w)({foundation:(0,s.x)(),foundationTerm:(0,s.x)(),initial:(0,s.x)(),taper:(0,s.x)(),terminal:(0,s.x)()}),De=Ne((0,s.r)((0,s.v)((0,s.w)({epoch:(0,s.x)(),effectiveSlot:(0,s.x)(),amount:(0,s.x)(),postBalance:(0,s.x)(),commission:(0,s.y)((0,s.v)((0,s.x)()))})))),He=(0,s.r)((0,s.w)({slot:(0,s.x)(),prioritizationFee:(0,s.x)()})),Fe=(0,s.w)({total:(0,s.x)(),validator:(0,s.x)(),foundation:(0,s.x)(),epoch:(0,s.x)()}),$e=(0,s.w)({epoch:(0,s.x)(),slotIndex:(0,s.x)(),slotsInEpoch:(0,s.x)(),absoluteSlot:(0,s.x)(),blockHeight:(0,s.y)((0,s.x)()),transactionCount:(0,s.y)((0,s.x)())}),je=(0,s.w)({slotsPerEpoch:(0,s.x)(),leaderScheduleSlotOffset:(0,s.x)(),warmup:(0,s.A)(),firstNormalEpoch:(0,s.x)(),firstNormalSlot:(0,s.x)()}),Je=(0,s.K)((0,s.p)(),(0,s.r)((0,s.x)())),Ge=(0,s.v)((0,s.z)([(0,s.w)({}),(0,s.p)()])),Ye=(0,s.w)({err:Ge}),Xe=(0,s.q)("receivedSignature"),Ze=(0,s.w)({"solana-core":(0,s.p)(),"feature-set":(0,s.y)((0,s.x)())}),Qe=qe((0,s.w)({err:(0,s.v)((0,s.z)([(0,s.w)({}),(0,s.p)()])),logs:(0,s.v)((0,s.r)((0,s.p)())),accounts:(0,s.y)((0,s.v)((0,s.r)((0,s.v)((0,s.w)({executable:(0,s.A)(),owner:(0,s.p)(),lamports:(0,s.x)(),data:(0,s.r)((0,s.p)()),rentEpoch:(0,s.y)((0,s.x)())}))))),unitsConsumed:(0,s.y)((0,s.x)()),returnData:(0,s.y)((0,s.v)((0,s.w)({programId:(0,s.p)(),data:(0,s.t)([(0,s.p)(),(0,s.q)("base64")])})))})),et=qe((0,s.w)({byIdentity:(0,s.K)((0,s.p)(),(0,s.r)((0,s.x)())),range:(0,s.w)({firstSlot:(0,s.x)(),lastSlot:(0,s.x)()})})),tt=Ne(Me),rt=Ne(Fe),st=Ne(He),nt=Ne($e),it=Ne(je),ot=Ne(Je),at=Ne((0,s.x)()),ct=qe((0,s.w)({total:(0,s.x)(),circulating:(0,s.x)(),nonCirculating:(0,s.x)(),nonCirculatingAccounts:(0,s.r)(Te)})),ut=(0,s.w)({amount:(0,s.p)(),uiAmount:(0,s.v)((0,s.x)()),decimals:(0,s.x)(),uiAmountString:(0,s.y)((0,s.p)())}),dt=qe((0,s.r)((0,s.w)({address:Te,amount:(0,s.p)(),uiAmount:(0,s.v)((0,s.x)()),decimals:(0,s.x)(),uiAmountString:(0,s.y)((0,s.p)())}))),lt=qe((0,s.r)((0,s.w)({pubkey:Te,account:(0,s.w)({executable:(0,s.A)(),owner:Te,lamports:(0,s.x)(),data:ze,rentEpoch:(0,s.x)()})}))),ht=(0,s.w)({program:(0,s.p)(),parsed:(0,s.I)(),space:(0,s.x)()}),gt=qe((0,s.r)((0,s.w)({pubkey:Te,account:(0,s.w)({executable:(0,s.A)(),owner:Te,lamports:(0,s.x)(),data:ht,rentEpoch:(0,s.x)()})}))),pt=qe((0,s.r)((0,s.w)({lamports:(0,s.x)(),address:Te}))),yt=(0,s.w)({executable:(0,s.A)(),owner:Te,lamports:(0,s.x)(),data:ze,rentEpoch:(0,s.x)()}),mt=(0,s.w)({pubkey:Te,account:yt}),bt=(0,s.m)((0,s.z)([(0,s.H)(s.b.Buffer),ht]),(0,s.z)([Re,ht]),(e=>Array.isArray(e)?(0,s.C)(e,ze):e)),kt=(0,s.w)({executable:(0,s.A)(),owner:Te,lamports:(0,s.x)(),data:bt,rentEpoch:(0,s.x)()}),ft=(0,s.w)({pubkey:Te,account:kt}),wt=(0,s.w)({state:(0,s.z)([(0,s.q)("active"),(0,s.q)("inactive"),(0,s.q)("activating"),(0,s.q)("deactivating")]),active:(0,s.x)(),inactive:(0,s.x)()}),St=Ne((0,s.r)((0,s.w)({signature:(0,s.p)(),slot:(0,s.x)(),err:Ge,memo:(0,s.v)((0,s.p)()),blockTime:(0,s.y)((0,s.v)((0,s.x)()))}))),It=Ne((0,s.r)((0,s.w)({signature:(0,s.p)(),slot:(0,s.x)(),err:Ge,memo:(0,s.v)((0,s.p)()),blockTime:(0,s.y)((0,s.v)((0,s.x)()))}))),At=(0,s.w)({subscription:(0,s.x)(),result:Ue(yt)}),_t=(0,s.w)({pubkey:Te,account:yt}),vt=(0,s.w)({subscription:(0,s.x)(),result:Ue(_t)}),xt=(0,s.w)({parent:(0,s.x)(),slot:(0,s.x)(),root:(0,s.x)()}),Pt=(0,s.w)({subscription:(0,s.x)(),result:xt}),Et=(0,s.z)([(0,s.w)({type:(0,s.z)([(0,s.q)("firstShredReceived"),(0,s.q)("completed"),(0,s.q)("optimisticConfirmation"),(0,s.q)("root")]),slot:(0,s.x)(),timestamp:(0,s.x)()}),(0,s.w)({type:(0,s.q)("createdBank"),parent:(0,s.x)(),slot:(0,s.x)(),timestamp:(0,s.x)()}),(0,s.w)({type:(0,s.q)("frozen"),slot:(0,s.x)(),timestamp:(0,s.x)(),stats:(0,s.w)({numTransactionEntries:(0,s.x)(),numSuccessfulTransactions:(0,s.x)(),numFailedTransactions:(0,s.x)(),maxTransactionsPerEntry:(0,s.x)()})}),(0,s.w)({type:(0,s.q)("dead"),slot:(0,s.x)(),timestamp:(0,s.x)(),err:(0,s.p)()})]),Ct=(0,s.w)({subscription:(0,s.x)(),result:Et}),Bt=(0,s.w)({subscription:(0,s.x)(),result:Ue((0,s.z)([Ye,Xe]))}),Tt=(0,s.w)({subscription:(0,s.x)(),result:(0,s.x)()}),Rt=(0,s.w)({pubkey:(0,s.p)(),gossip:(0,s.v)((0,s.p)()),tpu:(0,s.v)((0,s.p)()),rpc:(0,s.v)((0,s.p)()),version:(0,s.v)((0,s.p)())}),zt=(0,s.w)({votePubkey:(0,s.p)(),nodePubkey:(0,s.p)(),activatedStake:(0,s.x)(),epochVoteAccount:(0,s.A)(),epochCredits:(0,s.r)((0,s.t)([(0,s.x)(),(0,s.x)(),(0,s.x)()])),commission:(0,s.x)(),lastVote:(0,s.x)(),rootSlot:(0,s.v)((0,s.x)())}),Lt=Ne((0,s.w)({current:(0,s.r)(zt),delinquent:(0,s.r)(zt)})),Kt=(0,s.z)([(0,s.q)("processed"),(0,s.q)("confirmed"),(0,s.q)("finalized")]),Wt=(0,s.w)({slot:(0,s.x)(),confirmations:(0,s.v)((0,s.x)()),err:Ge,confirmationStatus:(0,s.y)(Kt)}),Ot=qe((0,s.r)((0,s.v)(Wt))),Nt=Ne((0,s.x)()),qt=(0,s.w)({accountKey:Te,writableIndexes:(0,s.r)((0,s.x)()),readonlyIndexes:(0,s.r)((0,s.x)())}),Ut=(0,s.w)({signatures:(0,s.r)((0,s.p)()),message:(0,s.w)({accountKeys:(0,s.r)((0,s.p)()),header:(0,s.w)({numRequiredSignatures:(0,s.x)(),numReadonlySignedAccounts:(0,s.x)(),numReadonlyUnsignedAccounts:(0,s.x)()}),instructions:(0,s.r)((0,s.w)({accounts:(0,s.r)((0,s.x)()),data:(0,s.p)(),programIdIndex:(0,s.x)()})),recentBlockhash:(0,s.p)(),addressTableLookups:(0,s.y)((0,s.r)(qt))})}),Vt=(0,s.w)({pubkey:Te,signer:(0,s.A)(),writable:(0,s.A)(),source:(0,s.y)((0,s.z)([(0,s.q)("transaction"),(0,s.q)("lookupTable")]))}),Mt=(0,s.w)({accountKeys:(0,s.r)(Vt),signatures:(0,s.r)((0,s.p)())}),Dt=(0,s.w)({parsed:(0,s.I)(),program:(0,s.p)(),programId:Te}),Ht=(0,s.w)({accounts:(0,s.r)(Te),data:(0,s.p)(),programId:Te}),Ft=(0,s.z)([Ht,Dt]),$t=(0,s.z)([(0,s.w)({parsed:(0,s.I)(),program:(0,s.p)(),programId:(0,s.p)()}),(0,s.w)({accounts:(0,s.r)((0,s.p)()),data:(0,s.p)(),programId:(0,s.p)()})]),jt=(0,s.m)(Ft,$t,(e=>(0,s.C)(e,"accounts"in e?Ht:Dt))),Jt=(0,s.w)({signatures:(0,s.r)((0,s.p)()),message:(0,s.w)({accountKeys:(0,s.r)(Vt),instructions:(0,s.r)(jt),recentBlockhash:(0,s.p)(),addressTableLookups:(0,s.y)((0,s.v)((0,s.r)(qt)))})}),Gt=(0,s.w)({accountIndex:(0,s.x)(),mint:(0,s.p)(),owner:(0,s.y)((0,s.p)()),uiTokenAmount:ut}),Yt=(0,s.w)({writable:(0,s.r)(Te),readonly:(0,s.r)(Te)}),Xt=(0,s.w)({err:Ge,fee:(0,s.x)(),innerInstructions:(0,s.y)((0,s.v)((0,s.r)((0,s.w)({index:(0,s.x)(),instructions:(0,s.r)((0,s.w)({accounts:(0,s.r)((0,s.x)()),data:(0,s.p)(),programIdIndex:(0,s.x)()}))})))),preBalances:(0,s.r)((0,s.x)()),postBalances:(0,s.r)((0,s.x)()),logMessages:(0,s.y)((0,s.v)((0,s.r)((0,s.p)()))),preTokenBalances:(0,s.y)((0,s.v)((0,s.r)(Gt))),postTokenBalances:(0,s.y)((0,s.v)((0,s.r)(Gt))),loadedAddresses:(0,s.y)(Yt),computeUnitsConsumed:(0,s.y)((0,s.x)())}),Zt=(0,s.w)({err:Ge,fee:(0,s.x)(),innerInstructions:(0,s.y)((0,s.v)((0,s.r)((0,s.w)({index:(0,s.x)(),instructions:(0,s.r)(jt)})))),preBalances:(0,s.r)((0,s.x)()),postBalances:(0,s.r)((0,s.x)()),logMessages:(0,s.y)((0,s.v)((0,s.r)((0,s.p)()))),preTokenBalances:(0,s.y)((0,s.v)((0,s.r)(Gt))),postTokenBalances:(0,s.y)((0,s.v)((0,s.r)(Gt))),loadedAddresses:(0,s.y)(Yt),computeUnitsConsumed:(0,s.y)((0,s.x)())}),Qt=(0,s.z)([(0,s.q)(0),(0,s.q)("legacy")]),er=(0,s.w)({pubkey:(0,s.p)(),lamports:(0,s.x)(),postBalance:(0,s.v)((0,s.x)()),rewardType:(0,s.v)((0,s.p)()),commission:(0,s.y)((0,s.v)((0,s.x)()))}),tr=Ne((0,s.v)((0,s.w)({blockhash:(0,s.p)(),previousBlockhash:(0,s.p)(),parentSlot:(0,s.x)(),transactions:(0,s.r)((0,s.w)({transaction:Ut,meta:(0,s.v)(Xt),version:(0,s.y)(Qt)})),rewards:(0,s.y)((0,s.r)(er)),blockTime:(0,s.v)((0,s.x)()),blockHeight:(0,s.v)((0,s.x)())}))),rr=Ne((0,s.v)((0,s.w)({blockhash:(0,s.p)(),previousBlockhash:(0,s.p)(),parentSlot:(0,s.x)(),rewards:(0,s.y)((0,s.r)(er)),blockTime:(0,s.v)((0,s.x)()),blockHeight:(0,s.v)((0,s.x)())}))),sr=Ne((0,s.v)((0,s.w)({blockhash:(0,s.p)(),previousBlockhash:(0,s.p)(),parentSlot:(0,s.x)(),transactions:(0,s.r)((0,s.w)({transaction:Mt,meta:(0,s.v)(Xt),version:(0,s.y)(Qt)})),rewards:(0,s.y)((0,s.r)(er)),blockTime:(0,s.v)((0,s.x)()),blockHeight:(0,s.v)((0,s.x)())}))),nr=Ne((0,s.v)((0,s.w)({blockhash:(0,s.p)(),previousBlockhash:(0,s.p)(),parentSlot:(0,s.x)(),transactions:(0,s.r)((0,s.w)({transaction:Jt,meta:(0,s.v)(Zt),version:(0,s.y)(Qt)})),rewards:(0,s.y)((0,s.r)(er)),blockTime:(0,s.v)((0,s.x)()),blockHeight:(0,s.v)((0,s.x)())}))),ir=Ne((0,s.v)((0,s.w)({blockhash:(0,s.p)(),previousBlockhash:(0,s.p)(),parentSlot:(0,s.x)(),transactions:(0,s.r)((0,s.w)({transaction:Mt,meta:(0,s.v)(Zt),version:(0,s.y)(Qt)})),rewards:(0,s.y)((0,s.r)(er)),blockTime:(0,s.v)((0,s.x)()),blockHeight:(0,s.v)((0,s.x)())}))),or=Ne((0,s.v)((0,s.w)({blockhash:(0,s.p)(),previousBlockhash:(0,s.p)(),parentSlot:(0,s.x)(),rewards:(0,s.y)((0,s.r)(er)),blockTime:(0,s.v)((0,s.x)()),blockHeight:(0,s.v)((0,s.x)())}))),ar=Ne((0,s.v)((0,s.w)({blockhash:(0,s.p)(),previousBlockhash:(0,s.p)(),parentSlot:(0,s.x)(),transactions:(0,s.r)((0,s.w)({transaction:Ut,meta:(0,s.v)(Xt)})),rewards:(0,s.y)((0,s.r)(er)),blockTime:(0,s.v)((0,s.x)())}))),cr=Ne((0,s.v)((0,s.w)({blockhash:(0,s.p)(),previousBlockhash:(0,s.p)(),parentSlot:(0,s.x)(),signatures:(0,s.r)((0,s.p)()),blockTime:(0,s.v)((0,s.x)())}))),ur=Ne((0,s.v)((0,s.w)({slot:(0,s.x)(),meta:(0,s.v)(Xt),blockTime:(0,s.y)((0,s.v)((0,s.x)())),transaction:Ut,version:(0,s.y)(Qt)}))),dr=Ne((0,s.v)((0,s.w)({slot:(0,s.x)(),transaction:Jt,meta:(0,s.v)(Zt),blockTime:(0,s.y)((0,s.v)((0,s.x)())),version:(0,s.y)(Qt)}))),lr=qe((0,s.w)({blockhash:(0,s.p)(),feeCalculator:(0,s.w)({lamportsPerSignature:(0,s.x)()})})),hr=qe((0,s.w)({blockhash:(0,s.p)(),lastValidBlockHeight:(0,s.x)()})),gr=qe((0,s.A)()),pr=(0,s.w)({slot:(0,s.x)(),numTransactions:(0,s.x)(),numSlots:(0,s.x)(),samplePeriodSecs:(0,s.x)()}),yr=Ne((0,s.r)(pr)),mr=qe((0,s.v)((0,s.w)({feeCalculator:(0,s.w)({lamportsPerSignature:(0,s.x)()})}))),br=Ne((0,s.p)()),kr=Ne((0,s.p)()),fr=(0,s.w)({err:Ge,logs:(0,s.r)((0,s.p)()),signature:(0,s.p)()}),wr=(0,s.w)({result:Ue(fr),subscription:(0,s.x)()}),Sr={"solana-client":"js/0.0.0-development"};class Ir{constructor(e,t){let r,n,i,o,a,c;var u;this._commitment=void 0,this._confirmTransactionInitialTimeout=void 0,this._rpcEndpoint=void 0,this._rpcWsEndpoint=void 0,this._rpcClient=void 0,this._rpcRequest=void 0,this._rpcBatchRequest=void 0,this._rpcWebSocket=void 0,this._rpcWebSocketConnected=!1,this._rpcWebSocketHeartbeat=null,this._rpcWebSocketIdleTimeout=null,this._rpcWebSocketGeneration=0,this._disableBlockhashCaching=!1,this._pollingBlockhash=!1,this._blockhashInfo={latestBlockhash:null,lastFetch:0,transactionSignatures:[],simulatedSignatures:[]},this._nextClientSubscriptionId=0,this._subscriptionDisposeFunctionsByClientSubscriptionId={},this._subscriptionHashByClientSubscriptionId={},this._subscriptionStateChangeCallbacksByHash={},this._subscriptionCallbacksByServerSubscriptionId={},this._subscriptionsByHash={},this._subscriptionsAutoDisposedByRpc=new Set,this.getBlockHeight=(()=>{const e={};return async t=>{const{commitment:r,config:n}=Ke(t),i=this._buildArgs([],r,void 0,n),o=we(i);return e[o]=e[o]??(async()=>{try{const e=await this._rpcRequest("getBlockHeight",i),t=(0,s.C)(e,Ne((0,s.x)()));if("error"in t)throw new ve(t.error,"failed to get block height information");return t.result}finally{delete e[o]}})(),await e[o]}})(),t&&"string"==typeof t?this._commitment=t:t&&(this._commitment=t.commitment,this._confirmTransactionInitialTimeout=t.confirmTransactionInitialTimeout,r=t.wsEndpoint,n=t.httpHeaders,i=t.fetch,o=t.fetchMiddleware,a=t.disableRetryOnRateLimit,c=t.httpAgent),this._rpcEndpoint=function(e){if(!1===/^https?:/.test(e))throw new TypeError("Endpoint URL must start with `http:` or `https:`.");return e}(e),this._rpcWsEndpoint=r||function(e){const t=e.match(Be);if(null==t)throw TypeError(`Failed to validate endpoint URL \`${e}\``);const[r,s,n,i]=t,o=e.startsWith("https:")?"wss:":"ws:",a=null==n?null:parseInt(n.slice(1),10);return`${o}//${s}${null==a?"":`:${a+1}`}${i}`}(e),this._rpcClient=function(e,t,r,n,i,o){const a=r||xe;let c;return null!=o&&console.warn("You have supplied an `httpAgent` when creating a `Connection` in a browser environment.It has been ignored; `httpAgent` is only used in Node environments."),n&&(c=async(e,t)=>{const r=await new Promise(((r,s)=>{try{n(e,t,((e,t)=>r([e,t])))}catch(e){s(e)}}));return await a(...r)}),new s.L((async(r,s)=>{const n={method:"POST",body:r,agent:void 0,headers:Object.assign({"Content-Type":"application/json"},t||{},Sr)};try{let t,r=5,o=500;for(;t=c?await c(e,n):await a(e,n),429===t.status&&!0!==i&&(r-=1,0!==r);)console.error(`Server responded with ${t.status} ${t.statusText}.  Retrying after ${o}ms delay...`),await se(o),o*=2;const u=await t.text();t.ok?s(null,u):s(new Error(`${t.status} ${t.statusText}: ${u}`))}catch(e){e instanceof Error&&s(e)}}),{})}(e,n,i,o,a,c),this._rpcRequest=(u=this._rpcClient,(e,t)=>new Promise(((r,s)=>{u.request(e,t,((e,t)=>{e?s(e):r(t)}))}))),this._rpcBatchRequest=function(e){return t=>new Promise(((r,s)=>{0===t.length&&r([]);const n=t.map((t=>e.request(t.methodName,t.args)));e.request(n,((e,t)=>{e?s(e):r(t)}))}))}(this._rpcClient),this._rpcWebSocket=new Pe(this._rpcWsEndpoint,{autoconnect:!1,max_reconnects:1/0}),this._rpcWebSocket.on("open",this._wsOnOpen.bind(this)),this._rpcWebSocket.on("error",this._wsOnError.bind(this)),this._rpcWebSocket.on("close",this._wsOnClose.bind(this)),this._rpcWebSocket.on("accountNotification",this._wsOnAccountNotification.bind(this)),this._rpcWebSocket.on("programNotification",this._wsOnProgramAccountNotification.bind(this)),this._rpcWebSocket.on("slotNotification",this._wsOnSlotNotification.bind(this)),this._rpcWebSocket.on("slotsUpdatesNotification",this._wsOnSlotUpdatesNotification.bind(this)),this._rpcWebSocket.on("signatureNotification",this._wsOnSignatureNotification.bind(this)),this._rpcWebSocket.on("rootNotification",this._wsOnRootNotification.bind(this)),this._rpcWebSocket.on("logsNotification",this._wsOnLogsNotification.bind(this))}get commitment(){return this._commitment}get rpcEndpoint(){return this._rpcEndpoint}async getBalanceAndContext(e,t){const{commitment:r,config:n}=Ke(t),i=this._buildArgs([e.toBase58()],r,void 0,n),o=await this._rpcRequest("getBalance",i),a=(0,s.C)(o,qe((0,s.x)()));if("error"in a)throw new ve(a.error,`failed to get balance for ${e.toBase58()}`);return a.result}async getBalance(e,t){return await this.getBalanceAndContext(e,t).then((e=>e.value)).catch((t=>{throw new Error("failed to get balance of account "+e.toBase58()+": "+t)}))}async getBlockTime(e){const t=await this._rpcRequest("getBlockTime",[e]),r=(0,s.C)(t,Ne((0,s.v)((0,s.x)())));if("error"in r)throw new ve(r.error,`failed to get block time for slot ${e}`);return r.result}async getMinimumLedgerSlot(){const e=await this._rpcRequest("minimumLedgerSlot",[]),t=(0,s.C)(e,Ne((0,s.x)()));if("error"in t)throw new ve(t.error,"failed to get minimum ledger slot");return t.result}async getFirstAvailableBlock(){const e=await this._rpcRequest("getFirstAvailableBlock",[]),t=(0,s.C)(e,at);if("error"in t)throw new ve(t.error,"failed to get first available block");return t.result}async getSupply(e){let t={};t="string"==typeof e?{commitment:e}:e?{...e,commitment:e&&e.commitment||this.commitment}:{commitment:this.commitment};const r=await this._rpcRequest("getSupply",[t]),n=(0,s.C)(r,ct);if("error"in n)throw new ve(n.error,"failed to get supply");return n.result}async getTokenSupply(e,t){const r=this._buildArgs([e.toBase58()],t),n=await this._rpcRequest("getTokenSupply",r),i=(0,s.C)(n,qe(ut));if("error"in i)throw new ve(i.error,"failed to get token supply");return i.result}async getTokenAccountBalance(e,t){const r=this._buildArgs([e.toBase58()],t),n=await this._rpcRequest("getTokenAccountBalance",r),i=(0,s.C)(n,qe(ut));if("error"in i)throw new ve(i.error,"failed to get token account balance");return i.result}async getTokenAccountsByOwner(e,t,r){const{commitment:n,config:i}=Ke(r);let o=[e.toBase58()];"mint"in t?o.push({mint:t.mint.toBase58()}):o.push({programId:t.programId.toBase58()});const a=this._buildArgs(o,n,"base64",i),c=await this._rpcRequest("getTokenAccountsByOwner",a),u=(0,s.C)(c,lt);if("error"in u)throw new ve(u.error,`failed to get token accounts owned by account ${e.toBase58()}`);return u.result}async getParsedTokenAccountsByOwner(e,t,r){let n=[e.toBase58()];"mint"in t?n.push({mint:t.mint.toBase58()}):n.push({programId:t.programId.toBase58()});const i=this._buildArgs(n,r,"jsonParsed"),o=await this._rpcRequest("getTokenAccountsByOwner",i),a=(0,s.C)(o,gt);if("error"in a)throw new ve(a.error,`failed to get token accounts owned by account ${e.toBase58()}`);return a.result}async getLargestAccounts(e){const t={...e,commitment:e&&e.commitment||this.commitment},r=t.filter||t.commitment?[t]:[],n=await this._rpcRequest("getLargestAccounts",r),i=(0,s.C)(n,pt);if("error"in i)throw new ve(i.error,"failed to get largest accounts");return i.result}async getTokenLargestAccounts(e,t){const r=this._buildArgs([e.toBase58()],t),n=await this._rpcRequest("getTokenLargestAccounts",r),i=(0,s.C)(n,dt);if("error"in i)throw new ve(i.error,"failed to get token largest accounts");return i.result}async getAccountInfoAndContext(e,t){const{commitment:r,config:n}=Ke(t),i=this._buildArgs([e.toBase58()],r,"base64",n),o=await this._rpcRequest("getAccountInfo",i),a=(0,s.C)(o,qe((0,s.v)(yt)));if("error"in a)throw new ve(a.error,`failed to get info about account ${e.toBase58()}`);return a.result}async getParsedAccountInfo(e,t){const{commitment:r,config:n}=Ke(t),i=this._buildArgs([e.toBase58()],r,"jsonParsed",n),o=await this._rpcRequest("getAccountInfo",i),a=(0,s.C)(o,qe((0,s.v)(kt)));if("error"in a)throw new ve(a.error,`failed to get info about account ${e.toBase58()}`);return a.result}async getAccountInfo(e,t){try{return(await this.getAccountInfoAndContext(e,t)).value}catch(t){throw new Error("failed to get info about account "+e.toBase58()+": "+t)}}async getMultipleParsedAccounts(e,t){const{commitment:r,config:n}=Ke(t),i=e.map((e=>e.toBase58())),o=this._buildArgs([i],r,"jsonParsed",n),a=await this._rpcRequest("getMultipleAccounts",o),c=(0,s.C)(a,qe((0,s.r)((0,s.v)(kt))));if("error"in c)throw new ve(c.error,`failed to get info for accounts ${i}`);return c.result}async getMultipleAccountsInfoAndContext(e,t){const{commitment:r,config:n}=Ke(t),i=e.map((e=>e.toBase58())),o=this._buildArgs([i],r,"base64",n),a=await this._rpcRequest("getMultipleAccounts",o),c=(0,s.C)(a,qe((0,s.r)((0,s.v)(yt))));if("error"in c)throw new ve(c.error,`failed to get info for accounts ${i}`);return c.result}async getMultipleAccountsInfo(e,t){return(await this.getMultipleAccountsInfoAndContext(e,t)).value}async getStakeActivation(e,t,r){const{commitment:n,config:i}=Ke(t),o=this._buildArgs([e.toBase58()],n,void 0,{...i,epoch:null!=r?r:i?.epoch}),a=await this._rpcRequest("getStakeActivation",o),c=(0,s.C)(a,Ne(wt));if("error"in c)throw new ve(c.error,`failed to get Stake Activation ${e.toBase58()}`);return c.result}async getProgramAccounts(e,t){const{commitment:r,config:n}=Ke(t),{encoding:i,...o}=n||{},a=this._buildArgs([e.toBase58()],r,i||"base64",o),c=await this._rpcRequest("getProgramAccounts",a),u=(0,s.r)(mt),d=!0===o.withContext?(0,s.C)(c,qe(u)):(0,s.C)(c,Ne(u));if("error"in d)throw new ve(d.error,`failed to get accounts owned by program ${e.toBase58()}`);return d.result}async getParsedProgramAccounts(e,t){const{commitment:r,config:n}=Ke(t),i=this._buildArgs([e.toBase58()],r,"jsonParsed",n),o=await this._rpcRequest("getProgramAccounts",i),a=(0,s.C)(o,Ne((0,s.r)(ft)));if("error"in a)throw new ve(a.error,`failed to get accounts owned by program ${e.toBase58()}`);return a.result}async confirmTransaction(e,t){let r,n;if("string"==typeof e)r=e;else{const t=e;if(t.abortSignal?.aborted)return Promise.reject(t.abortSignal.reason);r=t.signature}try{n=s.c.decode(r)}catch(e){throw new Error("signature must be base58 encoded: "+r)}return K(64===n.length,"signature has invalid length"),"string"==typeof e?await this.confirmTransactionUsingLegacyTimeoutStrategy({commitment:t||this.commitment,signature:r}):"lastValidBlockHeight"in e?await this.confirmTransactionUsingBlockHeightExceedanceStrategy({commitment:t||this.commitment,strategy:e}):await this.confirmTransactionUsingDurableNonceStrategy({commitment:t||this.commitment,strategy:e})}getCancellationPromise(e){return new Promise(((t,r)=>{null!=e&&(e.aborted?r(e.reason):e.addEventListener("abort",(()=>{r(e.reason)})))}))}getTransactionConfirmationPromise({commitment:e,signature:t}){let r,s,n=!1;return{abortConfirmation:()=>{s&&(s(),s=void 0),null!=r&&(this.removeSignatureListener(r),r=void 0)},confirmationPromise:new Promise(((i,o)=>{try{r=this.onSignature(t,((e,t)=>{r=void 0;const s={context:t,value:e};i({__type:U.PROCESSED,response:s})}),e);const a=new Promise((e=>{null==r?e():s=this._onSubscriptionStateChange(r,(t=>{"subscribed"===t&&e()}))}));(async()=>{if(await a,n)return;const r=await this.getSignatureStatus(t);if(n)return;if(null==r)return;const{context:s,value:c}=r;if(null!=c)if(c?.err)o(c.err);else{switch(e){case"confirmed":case"single":case"singleGossip":if("processed"===c.confirmationStatus)return;break;case"finalized":case"max":case"root":if("processed"===c.confirmationStatus||"confirmed"===c.confirmationStatus)return}n=!0,i({__type:U.PROCESSED,response:{context:s,value:c}})}})()}catch(e){o(e)}}))}}async confirmTransactionUsingBlockHeightExceedanceStrategy({commitment:e,strategy:{abortSignal:t,lastValidBlockHeight:r,signature:s}}){let n=!1;const i=new Promise((t=>{const s=async()=>{try{return await this.getBlockHeight(e)}catch(e){return-1}};(async()=>{let e=await s();if(!n){for(;e<=r;){if(await se(1e3),n)return;if(e=await s(),n)return}t({__type:U.BLOCKHEIGHT_EXCEEDED})}})()})),{abortConfirmation:o,confirmationPromise:a}=this.getTransactionConfirmationPromise({commitment:e,signature:s}),c=this.getCancellationPromise(t);let u;try{const e=await Promise.race([c,a,i]);if(e.__type!==U.PROCESSED)throw new v(s);u=e.response}finally{n=!0,o()}return u}async confirmTransactionUsingDurableNonceStrategy({commitment:e,strategy:{abortSignal:t,minContextSlot:r,nonceAccountPubkey:s,nonceValue:n,signature:i}}){let o=!1;const a=new Promise((t=>{let i=n,a=null;const c=async()=>{try{const{context:t,value:n}=await this.getNonceAndContext(s,{commitment:e,minContextSlot:r});return a=t.slot,n?.nonce}catch(e){return i}};(async()=>{if(i=await c(),!o)for(;;){if(n!==i)return void t({__type:U.NONCE_INVALID,slotInWhichNonceDidAdvance:a});if(await se(2e3),o)return;if(i=await c(),o)return}})()})),{abortConfirmation:c,confirmationPromise:u}=this.getTransactionConfirmationPromise({commitment:e,signature:i}),d=this.getCancellationPromise(t);let l;try{const t=await Promise.race([d,u,a]);if(t.__type===U.PROCESSED)l=t.response;else{let s;for(;;){const e=await this.getSignatureStatus(i);if(null==e)break;if(!(e.context.slot<(t.slotInWhichNonceDidAdvance??r))){s=e;break}await se(400)}if(!s?.value)throw new P(i);{const t=e||"finalized",{confirmationStatus:r}=s.value;switch(t){case"processed":case"recent":if("processed"!==r&&"confirmed"!==r&&"finalized"!==r)throw new P(i);break;case"confirmed":case"single":case"singleGossip":if("confirmed"!==r&&"finalized"!==r)throw new P(i);break;case"finalized":case"max":case"root":if("finalized"!==r)throw new P(i)}l={context:s.context,value:{err:s.value.err}}}}}finally{o=!0,c()}return l}async confirmTransactionUsingLegacyTimeoutStrategy({commitment:e,signature:t}){let r;const s=new Promise((t=>{let s=this._confirmTransactionInitialTimeout||6e4;switch(e){case"processed":case"recent":case"single":case"confirmed":case"singleGossip":s=this._confirmTransactionInitialTimeout||3e4}r=setTimeout((()=>t({__type:U.TIMED_OUT,timeoutMs:s})),s)})),{abortConfirmation:n,confirmationPromise:i}=this.getTransactionConfirmationPromise({commitment:e,signature:t});let o;try{const e=await Promise.race([i,s]);if(e.__type!==U.PROCESSED)throw new x(t,e.timeoutMs/1e3);o=e.response}finally{clearTimeout(r),n()}return o}async getClusterNodes(){const e=await this._rpcRequest("getClusterNodes",[]),t=(0,s.C)(e,Ne((0,s.r)(Rt)));if("error"in t)throw new ve(t.error,"failed to get cluster nodes");return t.result}async getVoteAccounts(e){const t=this._buildArgs([],e),r=await this._rpcRequest("getVoteAccounts",t),n=(0,s.C)(r,Lt);if("error"in n)throw new ve(n.error,"failed to get vote accounts");return n.result}async getSlot(e){const{commitment:t,config:r}=Ke(e),n=this._buildArgs([],t,void 0,r),i=await this._rpcRequest("getSlot",n),o=(0,s.C)(i,Ne((0,s.x)()));if("error"in o)throw new ve(o.error,"failed to get slot");return o.result}async getSlotLeader(e){const{commitment:t,config:r}=Ke(e),n=this._buildArgs([],t,void 0,r),i=await this._rpcRequest("getSlotLeader",n),o=(0,s.C)(i,Ne((0,s.p)()));if("error"in o)throw new ve(o.error,"failed to get slot leader");return o.result}async getSlotLeaders(e,t){const r=[e,t],n=await this._rpcRequest("getSlotLeaders",r),i=(0,s.C)(n,Ne((0,s.r)(Te)));if("error"in i)throw new ve(i.error,"failed to get slot leaders");return i.result}async getSignatureStatus(e,t){const{context:r,value:s}=await this.getSignatureStatuses([e],t);return K(1===s.length),{context:r,value:s[0]}}async getSignatureStatuses(e,t){const r=[e];t&&r.push(t);const n=await this._rpcRequest("getSignatureStatuses",r),i=(0,s.C)(n,Ot);if("error"in i)throw new ve(i.error,"failed to get signature status");return i.result}async getTransactionCount(e){const{commitment:t,config:r}=Ke(e),n=this._buildArgs([],t,void 0,r),i=await this._rpcRequest("getTransactionCount",n),o=(0,s.C)(i,Ne((0,s.x)()));if("error"in o)throw new ve(o.error,"failed to get transaction count");return o.result}async getTotalSupply(e){return(await this.getSupply({commitment:e,excludeNonCirculatingAccountsList:!0})).value.total}async getInflationGovernor(e){const t=this._buildArgs([],e),r=await this._rpcRequest("getInflationGovernor",t),n=(0,s.C)(r,tt);if("error"in n)throw new ve(n.error,"failed to get inflation");return n.result}async getInflationReward(e,t,r){const{commitment:n,config:i}=Ke(r),o=this._buildArgs([e.map((e=>e.toBase58()))],n,void 0,{...i,epoch:null!=t?t:i?.epoch}),a=await this._rpcRequest("getInflationReward",o),c=(0,s.C)(a,De);if("error"in c)throw new ve(c.error,"failed to get inflation reward");return c.result}async getInflationRate(){const e=await this._rpcRequest("getInflationRate",[]),t=(0,s.C)(e,rt);if("error"in t)throw new ve(t.error,"failed to get inflation rate");return t.result}async getEpochInfo(e){const{commitment:t,config:r}=Ke(e),n=this._buildArgs([],t,void 0,r),i=await this._rpcRequest("getEpochInfo",n),o=(0,s.C)(i,nt);if("error"in o)throw new ve(o.error,"failed to get epoch info");return o.result}async getEpochSchedule(){const e=await this._rpcRequest("getEpochSchedule",[]),t=(0,s.C)(e,it);if("error"in t)throw new ve(t.error,"failed to get epoch schedule");const r=t.result;return new Ie(r.slotsPerEpoch,r.leaderScheduleSlotOffset,r.warmup,r.firstNormalEpoch,r.firstNormalSlot)}async getLeaderSchedule(){const e=await this._rpcRequest("getLeaderSchedule",[]),t=(0,s.C)(e,ot);if("error"in t)throw new ve(t.error,"failed to get leader schedule");return t.result}async getMinimumBalanceForRentExemption(e,t){const r=this._buildArgs([e],t),n=await this._rpcRequest("getMinimumBalanceForRentExemption",r),i=(0,s.C)(n,Nt);return"error"in i?(console.warn("Unable to fetch minimum balance for rent exemption"),0):i.result}async getRecentBlockhashAndContext(e){const t=this._buildArgs([],e),r=await this._rpcRequest("getRecentBlockhash",t),n=(0,s.C)(r,lr);if("error"in n)throw new ve(n.error,"failed to get recent blockhash");return n.result}async getRecentPerformanceSamples(e){const t=await this._rpcRequest("getRecentPerformanceSamples",e?[e]:[]),r=(0,s.C)(t,yr);if("error"in r)throw new ve(r.error,"failed to get recent performance samples");return r.result}async getFeeCalculatorForBlockhash(e,t){const r=this._buildArgs([e],t),n=await this._rpcRequest("getFeeCalculatorForBlockhash",r),i=(0,s.C)(n,mr);if("error"in i)throw new ve(i.error,"failed to get fee calculator");const{context:o,value:a}=i.result;return{context:o,value:null!==a?a.feeCalculator:null}}async getFeeForMessage(e,t){const r=d(e.serialize()).toString("base64"),n=this._buildArgs([r],t),i=await this._rpcRequest("getFeeForMessage",n),o=(0,s.C)(i,qe((0,s.v)((0,s.x)())));if("error"in o)throw new ve(o.error,"failed to get fee for message");if(null===o.result)throw new Error("invalid blockhash");return o.result}async getRecentPrioritizationFees(e){const t=e?.lockedWritableAccounts?.map((e=>e.toBase58())),r=t?.length?[t]:[],n=await this._rpcRequest("getRecentPrioritizationFees",r),i=(0,s.C)(n,st);if("error"in i)throw new ve(i.error,"failed to get recent prioritization fees");return i.result}async getRecentBlockhash(e){try{return(await this.getRecentBlockhashAndContext(e)).value}catch(e){throw new Error("failed to get recent blockhash: "+e)}}async getLatestBlockhash(e){try{return(await this.getLatestBlockhashAndContext(e)).value}catch(e){throw new Error("failed to get recent blockhash: "+e)}}async getLatestBlockhashAndContext(e){const{commitment:t,config:r}=Ke(e),n=this._buildArgs([],t,void 0,r),i=await this._rpcRequest("getLatestBlockhash",n),o=(0,s.C)(i,hr);if("error"in o)throw new ve(o.error,"failed to get latest blockhash");return o.result}async isBlockhashValid(e,t){const{commitment:r,config:n}=Ke(t),i=this._buildArgs([e],r,void 0,n),o=await this._rpcRequest("isBlockhashValid",i),a=(0,s.C)(o,gr);if("error"in a)throw new ve(a.error,"failed to determine if the blockhash `"+e+"`is valid");return a.result}async getVersion(){const e=await this._rpcRequest("getVersion",[]),t=(0,s.C)(e,Ne(Ze));if("error"in t)throw new ve(t.error,"failed to get version");return t.result}async getGenesisHash(){const e=await this._rpcRequest("getGenesisHash",[]),t=(0,s.C)(e,Ne((0,s.p)()));if("error"in t)throw new ve(t.error,"failed to get genesis hash");return t.result}async getBlock(e,t){const{commitment:r,config:n}=Ke(t),i=this._buildArgsAtLeastConfirmed([e],r,void 0,n),o=await this._rpcRequest("getBlock",i);try{switch(n?.transactionDetails){case"accounts":{const e=(0,s.C)(o,sr);if("error"in e)throw e.error;return e.result}case"none":{const e=(0,s.C)(o,rr);if("error"in e)throw e.error;return e.result}default:{const e=(0,s.C)(o,tr);if("error"in e)throw e.error;const{result:t}=e;return t?{...t,transactions:t.transactions.map((({transaction:e,meta:t,version:r})=>({meta:t,transaction:{...e,message:Ve(r,e.message)},version:r})))}:null}}}catch(e){throw new ve(e,"failed to get confirmed block")}}async getParsedBlock(e,t){const{commitment:r,config:n}=Ke(t),i=this._buildArgsAtLeastConfirmed([e],r,"jsonParsed",n),o=await this._rpcRequest("getBlock",i);try{switch(n?.transactionDetails){case"accounts":{const e=(0,s.C)(o,ir);if("error"in e)throw e.error;return e.result}case"none":{const e=(0,s.C)(o,or);if("error"in e)throw e.error;return e.result}default:{const e=(0,s.C)(o,nr);if("error"in e)throw e.error;return e.result}}}catch(e){throw new ve(e,"failed to get block")}}async getBlockProduction(e){let t,r;if("string"==typeof e)r=e;else if(e){const{commitment:s,...n}=e;r=s,t=n}const n=this._buildArgs([],r,"base64",t),i=await this._rpcRequest("getBlockProduction",n),o=(0,s.C)(i,et);if("error"in o)throw new ve(o.error,"failed to get block production information");return o.result}async getTransaction(e,t){const{commitment:r,config:n}=Ke(t),i=this._buildArgsAtLeastConfirmed([e],r,void 0,n),o=await this._rpcRequest("getTransaction",i),a=(0,s.C)(o,ur);if("error"in a)throw new ve(a.error,"failed to get transaction");const c=a.result;return c?{...c,transaction:{...c.transaction,message:Ve(c.version,c.transaction.message)}}:c}async getParsedTransaction(e,t){const{commitment:r,config:n}=Ke(t),i=this._buildArgsAtLeastConfirmed([e],r,"jsonParsed",n),o=await this._rpcRequest("getTransaction",i),a=(0,s.C)(o,dr);if("error"in a)throw new ve(a.error,"failed to get transaction");return a.result}async getParsedTransactions(e,t){const{commitment:r,config:n}=Ke(t),i=e.map((e=>({methodName:"getTransaction",args:this._buildArgsAtLeastConfirmed([e],r,"jsonParsed",n)})));return(await this._rpcBatchRequest(i)).map((e=>{const t=(0,s.C)(e,dr);if("error"in t)throw new ve(t.error,"failed to get transactions");return t.result}))}async getTransactions(e,t){const{commitment:r,config:n}=Ke(t),i=e.map((e=>({methodName:"getTransaction",args:this._buildArgsAtLeastConfirmed([e],r,void 0,n)})));return(await this._rpcBatchRequest(i)).map((e=>{const t=(0,s.C)(e,ur);if("error"in t)throw new ve(t.error,"failed to get transactions");const r=t.result;return r?{...r,transaction:{...r.transaction,message:Ve(r.version,r.transaction.message)}}:r}))}async getConfirmedBlock(e,t){const r=this._buildArgsAtLeastConfirmed([e],t),n=await this._rpcRequest("getConfirmedBlock",r),i=(0,s.C)(n,ar);if("error"in i)throw new ve(i.error,"failed to get confirmed block");const o=i.result;if(!o)throw new Error("Confirmed block "+e+" not found");const a={...o,transactions:o.transactions.map((({transaction:e,meta:t})=>{const r=new O(e.message);return{meta:t,transaction:{...e,message:r}}}))};return{...a,transactions:a.transactions.map((({transaction:e,meta:t})=>({meta:t,transaction:H.populate(e.message,e.signatures)})))}}async getBlocks(e,t,r){const n=this._buildArgsAtLeastConfirmed(void 0!==t?[e,t]:[e],r),i=await this._rpcRequest("getBlocks",n),o=(0,s.C)(i,Ne((0,s.r)((0,s.x)())));if("error"in o)throw new ve(o.error,"failed to get blocks");return o.result}async getBlockSignatures(e,t){const r=this._buildArgsAtLeastConfirmed([e],t,void 0,{transactionDetails:"signatures",rewards:!1}),n=await this._rpcRequest("getBlock",r),i=(0,s.C)(n,cr);if("error"in i)throw new ve(i.error,"failed to get block");const o=i.result;if(!o)throw new Error("Block "+e+" not found");return o}async getConfirmedBlockSignatures(e,t){const r=this._buildArgsAtLeastConfirmed([e],t,void 0,{transactionDetails:"signatures",rewards:!1}),n=await this._rpcRequest("getConfirmedBlock",r),i=(0,s.C)(n,cr);if("error"in i)throw new ve(i.error,"failed to get confirmed block");const o=i.result;if(!o)throw new Error("Confirmed block "+e+" not found");return o}async getConfirmedTransaction(e,t){const r=this._buildArgsAtLeastConfirmed([e],t),n=await this._rpcRequest("getConfirmedTransaction",r),i=(0,s.C)(n,ur);if("error"in i)throw new ve(i.error,"failed to get transaction");const o=i.result;if(!o)return o;const a=new O(o.transaction.message),c=o.transaction.signatures;return{...o,transaction:H.populate(a,c)}}async getParsedConfirmedTransaction(e,t){const r=this._buildArgsAtLeastConfirmed([e],t,"jsonParsed"),n=await this._rpcRequest("getConfirmedTransaction",r),i=(0,s.C)(n,dr);if("error"in i)throw new ve(i.error,"failed to get confirmed transaction");return i.result}async getParsedConfirmedTransactions(e,t){const r=e.map((e=>({methodName:"getConfirmedTransaction",args:this._buildArgsAtLeastConfirmed([e],t,"jsonParsed")})));return(await this._rpcBatchRequest(r)).map((e=>{const t=(0,s.C)(e,dr);if("error"in t)throw new ve(t.error,"failed to get confirmed transactions");return t.result}))}async getConfirmedSignaturesForAddress(e,t,r){let s={},n=await this.getFirstAvailableBlock();for(;!("until"in s)&&!(--t<=0||t<n);)try{const e=await this.getConfirmedBlockSignatures(t,"finalized");e.signatures.length>0&&(s.until=e.signatures[e.signatures.length-1].toString())}catch(e){if(e instanceof Error&&e.message.includes("skipped"))continue;throw e}let i=await this.getSlot("finalized");for(;!("before"in s||++r>i);)try{const e=await this.getConfirmedBlockSignatures(r);e.signatures.length>0&&(s.before=e.signatures[e.signatures.length-1].toString())}catch(e){if(e instanceof Error&&e.message.includes("skipped"))continue;throw e}return(await this.getConfirmedSignaturesForAddress2(e,s)).map((e=>e.signature))}async getConfirmedSignaturesForAddress2(e,t,r){const n=this._buildArgsAtLeastConfirmed([e.toBase58()],r,void 0,t),i=await this._rpcRequest("getConfirmedSignaturesForAddress2",n),o=(0,s.C)(i,St);if("error"in o)throw new ve(o.error,"failed to get confirmed signatures for address");return o.result}async getSignaturesForAddress(e,t,r){const n=this._buildArgsAtLeastConfirmed([e.toBase58()],r,void 0,t),i=await this._rpcRequest("getSignaturesForAddress",n),o=(0,s.C)(i,It);if("error"in o)throw new ve(o.error,"failed to get signatures for address");return o.result}async getAddressLookupTable(e,t){const{context:r,value:s}=await this.getAccountInfoAndContext(e,t);let n=null;return null!==s&&(n=new Ee({key:e,state:Ee.deserialize(s.data)})),{context:r,value:n}}async getNonceAndContext(e,t){const{context:r,value:s}=await this.getAccountInfoAndContext(e,t);let n=null;return null!==s&&(n=ue.fromAccountData(s.data)),{context:r,value:n}}async getNonce(e,t){return await this.getNonceAndContext(e,t).then((e=>e.value)).catch((t=>{throw new Error("failed to get nonce for account "+e.toBase58()+": "+t)}))}async requestAirdrop(e,t){const r=await this._rpcRequest("requestAirdrop",[e.toBase58(),t]),n=(0,s.C)(r,br);if("error"in n)throw new ve(n.error,`airdrop to ${e.toBase58()} failed`);return n.result}async _blockhashWithExpiryBlockHeight(e){if(!e){for(;this._pollingBlockhash;)await se(100);const e=Date.now()-this._blockhashInfo.lastFetch>=3e4;if(null!==this._blockhashInfo.latestBlockhash&&!e)return this._blockhashInfo.latestBlockhash}return await this._pollNewBlockhash()}async _pollNewBlockhash(){this._pollingBlockhash=!0;try{const e=Date.now(),t=this._blockhashInfo.latestBlockhash,r=t?t.blockhash:null;for(let e=0;e<50;e++){const e=await this.getLatestBlockhash("finalized");if(r!==e.blockhash)return this._blockhashInfo={latestBlockhash:e,lastFetch:Date.now(),transactionSignatures:[],simulatedSignatures:[]},e;await se(200)}throw new Error(`Unable to obtain a new blockhash after ${Date.now()-e}ms`)}finally{this._pollingBlockhash=!1}}async getStakeMinimumDelegation(e){const{commitment:t,config:r}=Ke(e),n=this._buildArgs([],t,"base64",r),i=await this._rpcRequest("getStakeMinimumDelegation",n),o=(0,s.C)(i,qe((0,s.x)()));if("error"in o)throw new ve(o.error,"failed to get stake minimum delegation");return o.result}async simulateTransaction(e,t,r){if("message"in e){const n=e.serialize(),i=s.b.Buffer.from(n).toString("base64");if(Array.isArray(t)||void 0!==r)throw new Error("Invalid arguments");const o=t||{};o.encoding="base64","commitment"in o||(o.commitment=this.commitment);const a=[i,o],c=await this._rpcRequest("simulateTransaction",a),u=(0,s.C)(c,Qe);if("error"in u)throw new Error("failed to simulate transaction: "+u.error.message);return u.result}let n;if(e instanceof H){let t=e;n=new H,n.feePayer=t.feePayer,n.instructions=e.instructions,n.nonceInfo=t.nonceInfo,n.signatures=t.signatures}else n=H.populate(e),n._message=n._json=void 0;if(void 0!==t&&!Array.isArray(t))throw new Error("Invalid arguments");const i=t;if(n.nonceInfo&&i)n.sign(...i);else{let e=this._disableBlockhashCaching;for(;;){const t=await this._blockhashWithExpiryBlockHeight(e);if(n.lastValidBlockHeight=t.lastValidBlockHeight,n.recentBlockhash=t.blockhash,!i)break;if(n.sign(...i),!n.signature)throw new Error("!signature");const r=n.signature.toString("base64");if(!this._blockhashInfo.simulatedSignatures.includes(r)&&!this._blockhashInfo.transactionSignatures.includes(r)){this._blockhashInfo.simulatedSignatures.push(r);break}e=!0}}const o=n._compile(),a=o.serialize(),c=n._serialize(a).toString("base64"),u={encoding:"base64",commitment:this.commitment};if(r){const e=(Array.isArray(r)?r:o.nonProgramIds()).map((e=>e.toBase58()));u.accounts={encoding:"base64",addresses:e}}i&&(u.sigVerify=!0);const d=[c,u],l=await this._rpcRequest("simulateTransaction",d),h=(0,s.C)(l,Qe);if("error"in h){let e;if("data"in h.error&&(e=h.error.data.logs,e&&Array.isArray(e))){const t="\n    ",r=t+e.join(t);console.error(h.error.message,r)}throw new Ae("failed to simulate transaction: "+h.error.message,e)}return h.result}async sendTransaction(e,t,r){if("version"in e){if(t&&Array.isArray(t))throw new Error("Invalid arguments");const r=e.serialize();return await this.sendRawTransaction(r,t)}if(void 0===t||!Array.isArray(t))throw new Error("Invalid arguments");const s=t;if(e.nonceInfo)e.sign(...s);else{let t=this._disableBlockhashCaching;for(;;){const r=await this._blockhashWithExpiryBlockHeight(t);if(e.lastValidBlockHeight=r.lastValidBlockHeight,e.recentBlockhash=r.blockhash,e.sign(...s),!e.signature)throw new Error("!signature");const n=e.signature.toString("base64");if(!this._blockhashInfo.transactionSignatures.includes(n)){this._blockhashInfo.transactionSignatures.push(n);break}t=!0}}const n=e.serialize();return await this.sendRawTransaction(n,r)}async sendRawTransaction(e,t){const r=d(e).toString("base64");return await this.sendEncodedTransaction(r,t)}async sendEncodedTransaction(e,t){const r={encoding:"base64"},n=t&&t.skipPreflight,i=t&&t.preflightCommitment||this.commitment;t&&null!=t.maxRetries&&(r.maxRetries=t.maxRetries),t&&null!=t.minContextSlot&&(r.minContextSlot=t.minContextSlot),n&&(r.skipPreflight=n),i&&(r.preflightCommitment=i);const o=[e,r],a=await this._rpcRequest("sendTransaction",o),c=(0,s.C)(a,kr);if("error"in c){let e;throw"data"in c.error&&(e=c.error.data.logs),new Ae("failed to send transaction: "+c.error.message,e)}return c.result}_wsOnOpen(){this._rpcWebSocketConnected=!0,this._rpcWebSocketHeartbeat=setInterval((()=>{(async()=>{try{await this._rpcWebSocket.notify("ping")}catch{}})()}),5e3),this._updateSubscriptions()}_wsOnError(e){this._rpcWebSocketConnected=!1,console.error("ws error:",e.message)}_wsOnClose(e){this._rpcWebSocketConnected=!1,this._rpcWebSocketGeneration=(this._rpcWebSocketGeneration+1)%Number.MAX_SAFE_INTEGER,this._rpcWebSocketIdleTimeout&&(clearTimeout(this._rpcWebSocketIdleTimeout),this._rpcWebSocketIdleTimeout=null),this._rpcWebSocketHeartbeat&&(clearInterval(this._rpcWebSocketHeartbeat),this._rpcWebSocketHeartbeat=null),1e3!==e?(this._subscriptionCallbacksByServerSubscriptionId={},Object.entries(this._subscriptionsByHash).forEach((([e,t])=>{this._setSubscription(e,{...t,state:"pending"})}))):this._updateSubscriptions()}_setSubscription(e,t){const r=this._subscriptionsByHash[e]?.state;if(this._subscriptionsByHash[e]=t,r!==t.state){const r=this._subscriptionStateChangeCallbacksByHash[e];r&&r.forEach((e=>{try{e(t.state)}catch{}}))}}_onSubscriptionStateChange(e,t){const r=this._subscriptionHashByClientSubscriptionId[e];if(null==r)return()=>{};const s=this._subscriptionStateChangeCallbacksByHash[r]||=new Set;return s.add(t),()=>{s.delete(t),0===s.size&&delete this._subscriptionStateChangeCallbacksByHash[r]}}async _updateSubscriptions(){if(0===Object.keys(this._subscriptionsByHash).length)return void(this._rpcWebSocketConnected&&(this._rpcWebSocketConnected=!1,this._rpcWebSocketIdleTimeout=setTimeout((()=>{this._rpcWebSocketIdleTimeout=null;try{this._rpcWebSocket.close()}catch(e){e instanceof Error&&console.log(`Error when closing socket connection: ${e.message}`)}}),500)));if(null!==this._rpcWebSocketIdleTimeout&&(clearTimeout(this._rpcWebSocketIdleTimeout),this._rpcWebSocketIdleTimeout=null,this._rpcWebSocketConnected=!0),!this._rpcWebSocketConnected)return void this._rpcWebSocket.connect();const e=this._rpcWebSocketGeneration,t=()=>e===this._rpcWebSocketGeneration;await Promise.all(Object.keys(this._subscriptionsByHash).map((async e=>{const r=this._subscriptionsByHash[e];if(void 0!==r)switch(r.state){case"pending":case"unsubscribed":if(0===r.callbacks.size)return delete this._subscriptionsByHash[e],"unsubscribed"===r.state&&delete this._subscriptionCallbacksByServerSubscriptionId[r.serverSubscriptionId],void await this._updateSubscriptions();await(async()=>{const{args:s,method:n}=r;try{this._setSubscription(e,{...r,state:"subscribing"});const t=await this._rpcWebSocket.call(n,s);this._setSubscription(e,{...r,serverSubscriptionId:t,state:"subscribed"}),this._subscriptionCallbacksByServerSubscriptionId[t]=r.callbacks,await this._updateSubscriptions()}catch(i){if(i instanceof Error&&console.error(`${n} error for argument`,s,i.message),!t())return;this._setSubscription(e,{...r,state:"pending"}),await this._updateSubscriptions()}})();break;case"subscribed":0===r.callbacks.size&&await(async()=>{const{serverSubscriptionId:s,unsubscribeMethod:n}=r;if(this._subscriptionsAutoDisposedByRpc.has(s))this._subscriptionsAutoDisposedByRpc.delete(s);else{this._setSubscription(e,{...r,state:"unsubscribing"}),this._setSubscription(e,{...r,state:"unsubscribing"});try{await this._rpcWebSocket.call(n,[s])}catch(s){if(s instanceof Error&&console.error(`${n} error:`,s.message),!t())return;return this._setSubscription(e,{...r,state:"subscribed"}),void await this._updateSubscriptions()}}this._setSubscription(e,{...r,state:"unsubscribed"}),await this._updateSubscriptions()})()}})))}_handleServerNotification(e,t){const r=this._subscriptionCallbacksByServerSubscriptionId[e];void 0!==r&&r.forEach((e=>{try{e(...t)}catch(e){console.error(e)}}))}_wsOnAccountNotification(e){const{result:t,subscription:r}=(0,s.C)(e,At);this._handleServerNotification(r,[t.value,t.context])}_makeSubscription(e,t){const r=this._nextClientSubscriptionId++,s=we([e.method,t],!0),n=this._subscriptionsByHash[s];return void 0===n?this._subscriptionsByHash[s]={...e,args:t,callbacks:new Set([e.callback]),state:"pending"}:n.callbacks.add(e.callback),this._subscriptionHashByClientSubscriptionId[r]=s,this._subscriptionDisposeFunctionsByClientSubscriptionId[r]=async()=>{delete this._subscriptionDisposeFunctionsByClientSubscriptionId[r],delete this._subscriptionHashByClientSubscriptionId[r];const t=this._subscriptionsByHash[s];K(void 0!==t,`Could not find a \`Subscription\` when tearing down client subscription #${r}`),t.callbacks.delete(e.callback),await this._updateSubscriptions()},this._updateSubscriptions(),r}onAccountChange(e,t,r){const s=this._buildArgs([e.toBase58()],r||this._commitment||"finalized","base64");return this._makeSubscription({callback:t,method:"accountSubscribe",unsubscribeMethod:"accountUnsubscribe"},s)}async removeAccountChangeListener(e){await this._unsubscribeClientSubscription(e,"account change")}_wsOnProgramAccountNotification(e){const{result:t,subscription:r}=(0,s.C)(e,vt);this._handleServerNotification(r,[{accountId:t.value.pubkey,accountInfo:t.value.account},t.context])}onProgramAccountChange(e,t,r,s){const n=this._buildArgs([e.toBase58()],r||this._commitment||"finalized","base64",s?{filters:s}:void 0);return this._makeSubscription({callback:t,method:"programSubscribe",unsubscribeMethod:"programUnsubscribe"},n)}async removeProgramAccountChangeListener(e){await this._unsubscribeClientSubscription(e,"program account change")}onLogs(e,t,r){const s=this._buildArgs(["object"==typeof e?{mentions:[e.toString()]}:e],r||this._commitment||"finalized");return this._makeSubscription({callback:t,method:"logsSubscribe",unsubscribeMethod:"logsUnsubscribe"},s)}async removeOnLogsListener(e){await this._unsubscribeClientSubscription(e,"logs")}_wsOnLogsNotification(e){const{result:t,subscription:r}=(0,s.C)(e,wr);this._handleServerNotification(r,[t.value,t.context])}_wsOnSlotNotification(e){const{result:t,subscription:r}=(0,s.C)(e,Pt);this._handleServerNotification(r,[t])}onSlotChange(e){return this._makeSubscription({callback:e,method:"slotSubscribe",unsubscribeMethod:"slotUnsubscribe"},[])}async removeSlotChangeListener(e){await this._unsubscribeClientSubscription(e,"slot change")}_wsOnSlotUpdatesNotification(e){const{result:t,subscription:r}=(0,s.C)(e,Ct);this._handleServerNotification(r,[t])}onSlotUpdate(e){return this._makeSubscription({callback:e,method:"slotsUpdatesSubscribe",unsubscribeMethod:"slotsUpdatesUnsubscribe"},[])}async removeSlotUpdateListener(e){await this._unsubscribeClientSubscription(e,"slot update")}async _unsubscribeClientSubscription(e,t){const r=this._subscriptionDisposeFunctionsByClientSubscriptionId[e];r?await r():console.warn(`Ignored unsubscribe request because an active subscription with id \`${e}\` for '${t}' events could not be found.`)}_buildArgs(e,t,r,s){const n=t||this._commitment;if(n||r||s){let t={};r&&(t.encoding=r),n&&(t.commitment=n),s&&(t=Object.assign(t,s)),e.push(t)}return e}_buildArgsAtLeastConfirmed(e,t,r,s){const n=t||this._commitment;if(n&&!["confirmed","finalized"].includes(n))throw new Error("Using Connection with default commitment: `"+this._commitment+"`, but method requires at least `confirmed`");return this._buildArgs(e,t,r,s)}_wsOnSignatureNotification(e){const{result:t,subscription:r}=(0,s.C)(e,Bt);"receivedSignature"!==t.value&&this._subscriptionsAutoDisposedByRpc.add(r),this._handleServerNotification(r,"receivedSignature"===t.value?[{type:"received"},t.context]:[{type:"status",result:t.value},t.context])}onSignature(e,t,r){const s=this._buildArgs([e],r||this._commitment||"finalized"),n=this._makeSubscription({callback:(e,r)=>{if("status"===e.type){t(e.result,r);try{this.removeSignatureListener(n)}catch(e){}}},method:"signatureSubscribe",unsubscribeMethod:"signatureUnsubscribe"},s);return n}onSignatureWithOptions(e,t,r){const{commitment:s,...n}={...r,commitment:r&&r.commitment||this._commitment||"finalized"},i=this._buildArgs([e],s,void 0,n),o=this._makeSubscription({callback:(e,r)=>{t(e,r);try{this.removeSignatureListener(o)}catch(e){}},method:"signatureSubscribe",unsubscribeMethod:"signatureUnsubscribe"},i);return o}async removeSignatureListener(e){await this._unsubscribeClientSubscription(e,"signature result")}_wsOnRootNotification(e){const{result:t,subscription:r}=(0,s.C)(e,Tt);this._handleServerNotification(r,[t])}onRootChange(e){return this._makeSubscription({callback:e,method:"rootSubscribe",unsubscribeMethod:"rootUnsubscribe"},[])}async removeRootChangeListener(e){await this._unsubscribeClientSubscription(e,"root change")}}class Ar{constructor(e){this._keypair=void 0,this._keypair=e??i()}static generate(){return new Ar(i())}static fromSecretKey(e,t){if(64!==e.byteLength)throw new Error("bad secret key size");const r=e.slice(32,64);if(!t||!t.skipValidation){const t=e.slice(0,32),s=o(t);for(let e=0;e<32;e++)if(r[e]!==s[e])throw new Error("provided secretKey is invalid")}return new Ar({publicKey:r,secretKey:e})}static fromSeed(e){const t=o(e),r=new Uint8Array(64);return r.set(e),r.set(t,32),new Ar({publicKey:t,secretKey:r})}get publicKey(){return new f(this._keypair.publicKey)}get secretKey(){return new Uint8Array(this._keypair.secretKey)}}const _r=Object.freeze({CreateLookupTable:{index:0,layout:(0,s.g)([(0,s.k)("instruction"),de("recentSlot"),(0,s.u)("bumpSeed")])},FreezeLookupTable:{index:1,layout:(0,s.g)([(0,s.k)("instruction")])},ExtendLookupTable:{index:2,layout:(0,s.g)([(0,s.k)("instruction"),de(),(0,s.j)(C(),(0,s.o)((0,s.k)(),-8),"addresses")])},DeactivateLookupTable:{index:3,layout:(0,s.g)([(0,s.k)("instruction")])},CloseLookupTable:{index:4,layout:(0,s.g)([(0,s.k)("instruction")])}});class vr{constructor(){}static decodeInstructionType(e){this.checkProgramId(e.programId);const t=(0,s.k)("instruction").decode(e.data);let r;for(const[e,s]of Object.entries(_r))if(s.index==t){r=e;break}if(!r)throw new Error("Invalid Instruction. Should be a LookupTable Instruction");return r}static decodeCreateLookupTable(e){this.checkProgramId(e.programId),this.checkKeysLength(e.keys,4);const{recentSlot:t}=ie(_r.CreateLookupTable,e.data);return{authority:e.keys[1].pubkey,payer:e.keys[2].pubkey,recentSlot:Number(t)}}static decodeExtendLookupTable(e){if(this.checkProgramId(e.programId),e.keys.length<2)throw new Error(`invalid instruction; found ${e.keys.length} keys, expected at least 2`);const{addresses:t}=ie(_r.ExtendLookupTable,e.data);return{lookupTable:e.keys[0].pubkey,authority:e.keys[1].pubkey,payer:e.keys.length>2?e.keys[2].pubkey:void 0,addresses:t.map((e=>new f(e)))}}static decodeCloseLookupTable(e){return this.checkProgramId(e.programId),this.checkKeysLength(e.keys,3),{lookupTable:e.keys[0].pubkey,authority:e.keys[1].pubkey,recipient:e.keys[2].pubkey}}static decodeFreezeLookupTable(e){return this.checkProgramId(e.programId),this.checkKeysLength(e.keys,2),{lookupTable:e.keys[0].pubkey,authority:e.keys[1].pubkey}}static decodeDeactivateLookupTable(e){return this.checkProgramId(e.programId),this.checkKeysLength(e.keys,2),{lookupTable:e.keys[0].pubkey,authority:e.keys[1].pubkey}}static checkProgramId(e){if(!e.equals(xr.programId))throw new Error("invalid instruction; programId is not AddressLookupTable Program")}static checkKeysLength(e,t){if(e.length<t)throw new Error(`invalid instruction; found ${e.length} keys, expected at least ${t}`)}}class xr{constructor(){}static createLookupTable(e){const[t,r]=f.findProgramAddressSync([e.authority.toBuffer(),(0,s.D)(BigInt(e.recentSlot),8)],this.programId),n=ne(_r.CreateLookupTable,{recentSlot:BigInt(e.recentSlot),bumpSeed:r}),i=[{pubkey:t,isSigner:!1,isWritable:!0},{pubkey:e.authority,isSigner:!0,isWritable:!1},{pubkey:e.payer,isSigner:!0,isWritable:!0},{pubkey:ge.programId,isSigner:!1,isWritable:!1}];return[new D({programId:this.programId,keys:i,data:n}),t]}static freezeLookupTable(e){const t=ne(_r.FreezeLookupTable),r=[{pubkey:e.lookupTable,isSigner:!1,isWritable:!0},{pubkey:e.authority,isSigner:!0,isWritable:!1}];return new D({programId:this.programId,keys:r,data:t})}static extendLookupTable(e){const t=ne(_r.ExtendLookupTable,{addresses:e.addresses.map((e=>e.toBytes()))}),r=[{pubkey:e.lookupTable,isSigner:!1,isWritable:!0},{pubkey:e.authority,isSigner:!0,isWritable:!1}];return e.payer&&r.push({pubkey:e.payer,isSigner:!0,isWritable:!0},{pubkey:ge.programId,isSigner:!1,isWritable:!1}),new D({programId:this.programId,keys:r,data:t})}static deactivateLookupTable(e){const t=ne(_r.DeactivateLookupTable),r=[{pubkey:e.lookupTable,isSigner:!1,isWritable:!0},{pubkey:e.authority,isSigner:!0,isWritable:!1}];return new D({programId:this.programId,keys:r,data:t})}static closeLookupTable(e){const t=ne(_r.CloseLookupTable),r=[{pubkey:e.lookupTable,isSigner:!1,isWritable:!0},{pubkey:e.authority,isSigner:!0,isWritable:!1},{pubkey:e.recipient,isSigner:!1,isWritable:!0}];return new D({programId:this.programId,keys:r,data:t})}}xr.programId=new f("AddressLookupTab1e1111111111111111111111111");class Pr{constructor(){}static decodeInstructionType(e){this.checkProgramId(e.programId);const t=(0,s.u)("instruction").decode(e.data);let r;for(const[e,s]of Object.entries(Er))if(s.index==t){r=e;break}if(!r)throw new Error("Instruction type incorrect; not a ComputeBudgetInstruction");return r}static decodeRequestUnits(e){this.checkProgramId(e.programId);const{units:t,additionalFee:r}=ie(Er.RequestUnits,e.data);return{units:t,additionalFee:r}}static decodeRequestHeapFrame(e){this.checkProgramId(e.programId);const{bytes:t}=ie(Er.RequestHeapFrame,e.data);return{bytes:t}}static decodeSetComputeUnitLimit(e){this.checkProgramId(e.programId);const{units:t}=ie(Er.SetComputeUnitLimit,e.data);return{units:t}}static decodeSetComputeUnitPrice(e){this.checkProgramId(e.programId);const{microLamports:t}=ie(Er.SetComputeUnitPrice,e.data);return{microLamports:t}}static checkProgramId(e){if(!e.equals(Cr.programId))throw new Error("invalid instruction; programId is not ComputeBudgetProgram")}}const Er=Object.freeze({RequestUnits:{index:0,layout:(0,s.g)([(0,s.u)("instruction"),(0,s.k)("units"),(0,s.k)("additionalFee")])},RequestHeapFrame:{index:1,layout:(0,s.g)([(0,s.u)("instruction"),(0,s.k)("bytes")])},SetComputeUnitLimit:{index:2,layout:(0,s.g)([(0,s.u)("instruction"),(0,s.k)("units")])},SetComputeUnitPrice:{index:3,layout:(0,s.g)([(0,s.u)("instruction"),de("microLamports")])}});class Cr{constructor(){}static requestUnits(e){const t=ne(Er.RequestUnits,e);return new D({keys:[],programId:this.programId,data:t})}static requestHeapFrame(e){const t=ne(Er.RequestHeapFrame,e);return new D({keys:[],programId:this.programId,data:t})}static setComputeUnitLimit(e){const t=ne(Er.SetComputeUnitLimit,e);return new D({keys:[],programId:this.programId,data:t})}static setComputeUnitPrice(e){const t=ne(Er.SetComputeUnitPrice,{microLamports:BigInt(e.microLamports)});return new D({keys:[],programId:this.programId,data:t})}}Cr.programId=new f("ComputeBudget111111111111111111111111111111");const Br=(0,s.g)([(0,s.u)("numSignatures"),(0,s.u)("padding"),(0,s.E)("signatureOffset"),(0,s.E)("signatureInstructionIndex"),(0,s.E)("publicKeyOffset"),(0,s.E)("publicKeyInstructionIndex"),(0,s.E)("messageDataOffset"),(0,s.E)("messageDataSize"),(0,s.E)("messageInstructionIndex")]);class Tr{constructor(){}static createInstructionWithPublicKey(e){const{publicKey:t,message:r,signature:n,instructionIndex:i}=e;K(32===t.length,`Public Key must be 32 bytes but received ${t.length} bytes`),K(64===n.length,`Signature must be 64 bytes but received ${n.length} bytes`);const o=Br.span,a=o+t.length,c=a+n.length,u=s.b.Buffer.alloc(c+r.length),d=null==i?65535:i;return Br.encode({numSignatures:1,padding:0,signatureOffset:a,signatureInstructionIndex:d,publicKeyOffset:o,publicKeyInstructionIndex:d,messageDataOffset:c,messageDataSize:r.length,messageInstructionIndex:d},u),u.fill(t,o),u.fill(n,a),u.fill(r,c),new D({keys:[],programId:Tr.programId,data:u})}static createInstructionWithPrivateKey(e){const{privateKey:t,message:r,instructionIndex:s}=e;K(64===t.length,`Private key must be 64 bytes but received ${t.length} bytes`);try{const e=Ar.fromSecretKey(t),n=e.publicKey.toBytes(),i=c(r,e.secretKey);return this.createInstructionWithPublicKey({publicKey:n,message:r,signature:i,instructionIndex:s})}catch(e){throw new Error(`Error creating instruction; ${e}`)}}}Tr.programId=new f("Ed25519SigVerify111111111111111111111111111"),s.F.utils.isValidPrivateKey;const Rr=s.F.getPublicKey,zr=(0,s.g)([(0,s.u)("numSignatures"),(0,s.E)("signatureOffset"),(0,s.u)("signatureInstructionIndex"),(0,s.E)("ethAddressOffset"),(0,s.u)("ethAddressInstructionIndex"),(0,s.E)("messageDataOffset"),(0,s.E)("messageDataSize"),(0,s.u)("messageInstructionIndex"),(0,s.h)(20,"ethAddress"),(0,s.h)(64,"signature"),(0,s.u)("recoveryId")]);class Lr{constructor(){}static publicKeyToEthAddress(e){K(64===e.length,`Public key must be 64 bytes but received ${e.length} bytes`);try{return s.b.Buffer.from((0,s.G)(d(e))).slice(-20)}catch(e){throw new Error(`Error constructing Ethereum address: ${e}`)}}static createInstructionWithPublicKey(e){const{publicKey:t,message:r,signature:s,recoveryId:n,instructionIndex:i}=e;return Lr.createInstructionWithEthAddress({ethAddress:Lr.publicKeyToEthAddress(t),message:r,signature:s,recoveryId:n,instructionIndex:i})}static createInstructionWithEthAddress(e){const{ethAddress:t,message:r,signature:n,recoveryId:i,instructionIndex:o=0}=e;let a;a="string"==typeof t?t.startsWith("0x")?s.b.Buffer.from(t.substr(2),"hex"):s.b.Buffer.from(t,"hex"):t,K(20===a.length,`Address must be 20 bytes but received ${a.length} bytes`);const c=12+a.length,u=c+n.length+1,l=s.b.Buffer.alloc(zr.span+r.length);return zr.encode({numSignatures:1,signatureOffset:c,signatureInstructionIndex:o,ethAddressOffset:12,ethAddressInstructionIndex:o,messageDataOffset:u,messageDataSize:r.length,messageInstructionIndex:o,signature:d(n),ethAddress:d(a),recoveryId:i},l),l.fill(d(r),zr.span),new D({keys:[],programId:Lr.programId,data:l})}static createInstructionWithPrivateKey(e){const{privateKey:t,message:r,instructionIndex:n}=e;K(32===t.length,`Private key must be 32 bytes but received ${t.length} bytes`);try{const e=d(t),i=Rr(e,!1).slice(1),o=s.b.Buffer.from((0,s.G)(d(r))),[a,c]=((e,t)=>{const r=s.F.sign(e,t);return[r.toCompactRawBytes(),r.recovery]})(o,e);return this.createInstructionWithPublicKey({publicKey:i,message:r,signature:a,recoveryId:c,instructionIndex:n})}catch(e){throw new Error(`Error creating instruction; ${e}`)}}}var Kr;Lr.programId=new f("KeccakSecp256k11111111111111111111111111111");const Wr=new f("StakeConfig11111111111111111111111111111111");class Or{constructor(e,t){this.staker=void 0,this.withdrawer=void 0,this.staker=e,this.withdrawer=t}}class Nr{constructor(e,t,r){this.unixTimestamp=void 0,this.epoch=void 0,this.custodian=void 0,this.unixTimestamp=e,this.epoch=t,this.custodian=r}}Kr=Nr,Nr.default=new Kr(0,0,f.default);class qr{constructor(){}static decodeInstructionType(e){this.checkProgramId(e.programId);const t=(0,s.k)("instruction").decode(e.data);let r;for(const[e,s]of Object.entries(Ur))if(s.index==t){r=e;break}if(!r)throw new Error("Instruction type incorrect; not a StakeInstruction");return r}static decodeInitialize(e){this.checkProgramId(e.programId),this.checkKeyLength(e.keys,2);const{authorized:t,lockup:r}=ie(Ur.Initialize,e.data);return{stakePubkey:e.keys[0].pubkey,authorized:new Or(new f(t.staker),new f(t.withdrawer)),lockup:new Nr(r.unixTimestamp,r.epoch,new f(r.custodian))}}static decodeDelegate(e){return this.checkProgramId(e.programId),this.checkKeyLength(e.keys,6),ie(Ur.Delegate,e.data),{stakePubkey:e.keys[0].pubkey,votePubkey:e.keys[1].pubkey,authorizedPubkey:e.keys[5].pubkey}}static decodeAuthorize(e){this.checkProgramId(e.programId),this.checkKeyLength(e.keys,3);const{newAuthorized:t,stakeAuthorizationType:r}=ie(Ur.Authorize,e.data),s={stakePubkey:e.keys[0].pubkey,authorizedPubkey:e.keys[2].pubkey,newAuthorizedPubkey:new f(t),stakeAuthorizationType:{index:r}};return e.keys.length>3&&(s.custodianPubkey=e.keys[3].pubkey),s}static decodeAuthorizeWithSeed(e){this.checkProgramId(e.programId),this.checkKeyLength(e.keys,2);const{newAuthorized:t,stakeAuthorizationType:r,authoritySeed:s,authorityOwner:n}=ie(Ur.AuthorizeWithSeed,e.data),i={stakePubkey:e.keys[0].pubkey,authorityBase:e.keys[1].pubkey,authoritySeed:s,authorityOwner:new f(n),newAuthorizedPubkey:new f(t),stakeAuthorizationType:{index:r}};return e.keys.length>3&&(i.custodianPubkey=e.keys[3].pubkey),i}static decodeSplit(e){this.checkProgramId(e.programId),this.checkKeyLength(e.keys,3);const{lamports:t}=ie(Ur.Split,e.data);return{stakePubkey:e.keys[0].pubkey,splitStakePubkey:e.keys[1].pubkey,authorizedPubkey:e.keys[2].pubkey,lamports:t}}static decodeMerge(e){return this.checkProgramId(e.programId),this.checkKeyLength(e.keys,3),ie(Ur.Merge,e.data),{stakePubkey:e.keys[0].pubkey,sourceStakePubKey:e.keys[1].pubkey,authorizedPubkey:e.keys[4].pubkey}}static decodeWithdraw(e){this.checkProgramId(e.programId),this.checkKeyLength(e.keys,5);const{lamports:t}=ie(Ur.Withdraw,e.data),r={stakePubkey:e.keys[0].pubkey,toPubkey:e.keys[1].pubkey,authorizedPubkey:e.keys[4].pubkey,lamports:t};return e.keys.length>5&&(r.custodianPubkey=e.keys[5].pubkey),r}static decodeDeactivate(e){return this.checkProgramId(e.programId),this.checkKeyLength(e.keys,3),ie(Ur.Deactivate,e.data),{stakePubkey:e.keys[0].pubkey,authorizedPubkey:e.keys[2].pubkey}}static checkProgramId(e){if(!e.equals(Mr.programId))throw new Error("invalid instruction; programId is not StakeProgram")}static checkKeyLength(e,t){if(e.length<t)throw new Error(`invalid instruction; found ${e.length} keys, expected at least ${t}`)}}const Ur=Object.freeze({Initialize:{index:0,layout:(0,s.g)([(0,s.k)("instruction"),((e="authorized")=>(0,s.g)([C("staker"),C("withdrawer")],e))(),((e="lockup")=>(0,s.g)([(0,s.l)("unixTimestamp"),(0,s.l)("epoch"),C("custodian")],e))()])},Authorize:{index:1,layout:(0,s.g)([(0,s.k)("instruction"),C("newAuthorized"),(0,s.k)("stakeAuthorizationType")])},Delegate:{index:2,layout:(0,s.g)([(0,s.k)("instruction")])},Split:{index:3,layout:(0,s.g)([(0,s.k)("instruction"),(0,s.l)("lamports")])},Withdraw:{index:4,layout:(0,s.g)([(0,s.k)("instruction"),(0,s.l)("lamports")])},Deactivate:{index:5,layout:(0,s.g)([(0,s.k)("instruction")])},Merge:{index:7,layout:(0,s.g)([(0,s.k)("instruction")])},AuthorizeWithSeed:{index:8,layout:(0,s.g)([(0,s.k)("instruction"),C("newAuthorized"),(0,s.k)("stakeAuthorizationType"),T("authoritySeed"),C("authorityOwner")])}}),Vr=Object.freeze({Staker:{index:0},Withdrawer:{index:1}});class Mr{constructor(){}static initialize(e){const{stakePubkey:t,authorized:r,lockup:s}=e,n=s||Nr.default,i=ne(Ur.Initialize,{authorized:{staker:d(r.staker.toBuffer()),withdrawer:d(r.withdrawer.toBuffer())},lockup:{unixTimestamp:n.unixTimestamp,epoch:n.epoch,custodian:d(n.custodian.toBuffer())}}),o={keys:[{pubkey:t,isSigner:!1,isWritable:!0},{pubkey:X,isSigner:!1,isWritable:!1}],programId:this.programId,data:i};return new D(o)}static createAccountWithSeed(e){const t=new H;t.add(ge.createAccountWithSeed({fromPubkey:e.fromPubkey,newAccountPubkey:e.stakePubkey,basePubkey:e.basePubkey,seed:e.seed,lamports:e.lamports,space:this.space,programId:this.programId}));const{stakePubkey:r,authorized:s,lockup:n}=e;return t.add(this.initialize({stakePubkey:r,authorized:s,lockup:n}))}static createAccount(e){const t=new H;t.add(ge.createAccount({fromPubkey:e.fromPubkey,newAccountPubkey:e.stakePubkey,lamports:e.lamports,space:this.space,programId:this.programId}));const{stakePubkey:r,authorized:s,lockup:n}=e;return t.add(this.initialize({stakePubkey:r,authorized:s,lockup:n}))}static delegate(e){const{stakePubkey:t,authorizedPubkey:r,votePubkey:s}=e,n=ne(Ur.Delegate);return(new H).add({keys:[{pubkey:t,isSigner:!1,isWritable:!0},{pubkey:s,isSigner:!1,isWritable:!1},{pubkey:j,isSigner:!1,isWritable:!1},{pubkey:te,isSigner:!1,isWritable:!1},{pubkey:Wr,isSigner:!1,isWritable:!1},{pubkey:r,isSigner:!0,isWritable:!1}],programId:this.programId,data:n})}static authorize(e){const{stakePubkey:t,authorizedPubkey:r,newAuthorizedPubkey:s,stakeAuthorizationType:n,custodianPubkey:i}=e,o=ne(Ur.Authorize,{newAuthorized:d(s.toBuffer()),stakeAuthorizationType:n.index}),a=[{pubkey:t,isSigner:!1,isWritable:!0},{pubkey:j,isSigner:!1,isWritable:!0},{pubkey:r,isSigner:!0,isWritable:!1}];return i&&a.push({pubkey:i,isSigner:!0,isWritable:!1}),(new H).add({keys:a,programId:this.programId,data:o})}static authorizeWithSeed(e){const{stakePubkey:t,authorityBase:r,authoritySeed:s,authorityOwner:n,newAuthorizedPubkey:i,stakeAuthorizationType:o,custodianPubkey:a}=e,c=ne(Ur.AuthorizeWithSeed,{newAuthorized:d(i.toBuffer()),stakeAuthorizationType:o.index,authoritySeed:s,authorityOwner:d(n.toBuffer())}),u=[{pubkey:t,isSigner:!1,isWritable:!0},{pubkey:r,isSigner:!0,isWritable:!1},{pubkey:j,isSigner:!1,isWritable:!1}];return a&&u.push({pubkey:a,isSigner:!0,isWritable:!1}),(new H).add({keys:u,programId:this.programId,data:c})}static splitInstruction(e){const{stakePubkey:t,authorizedPubkey:r,splitStakePubkey:s,lamports:n}=e,i=ne(Ur.Split,{lamports:n});return new D({keys:[{pubkey:t,isSigner:!1,isWritable:!0},{pubkey:s,isSigner:!1,isWritable:!0},{pubkey:r,isSigner:!0,isWritable:!1}],programId:this.programId,data:i})}static split(e){const t=new H;return t.add(ge.createAccount({fromPubkey:e.authorizedPubkey,newAccountPubkey:e.splitStakePubkey,lamports:0,space:this.space,programId:this.programId})),t.add(this.splitInstruction(e))}static splitWithSeed(e){const{stakePubkey:t,authorizedPubkey:r,splitStakePubkey:s,basePubkey:n,seed:i,lamports:o}=e,a=new H;return a.add(ge.allocate({accountPubkey:s,basePubkey:n,seed:i,space:this.space,programId:this.programId})),a.add(this.splitInstruction({stakePubkey:t,authorizedPubkey:r,splitStakePubkey:s,lamports:o}))}static merge(e){const{stakePubkey:t,sourceStakePubKey:r,authorizedPubkey:s}=e,n=ne(Ur.Merge);return(new H).add({keys:[{pubkey:t,isSigner:!1,isWritable:!0},{pubkey:r,isSigner:!1,isWritable:!0},{pubkey:j,isSigner:!1,isWritable:!1},{pubkey:te,isSigner:!1,isWritable:!1},{pubkey:s,isSigner:!0,isWritable:!1}],programId:this.programId,data:n})}static withdraw(e){const{stakePubkey:t,authorizedPubkey:r,toPubkey:s,lamports:n,custodianPubkey:i}=e,o=ne(Ur.Withdraw,{lamports:n}),a=[{pubkey:t,isSigner:!1,isWritable:!0},{pubkey:s,isSigner:!1,isWritable:!0},{pubkey:j,isSigner:!1,isWritable:!1},{pubkey:te,isSigner:!1,isWritable:!1},{pubkey:r,isSigner:!0,isWritable:!1}];return i&&a.push({pubkey:i,isSigner:!0,isWritable:!1}),(new H).add({keys:a,programId:this.programId,data:o})}static deactivate(e){const{stakePubkey:t,authorizedPubkey:r}=e,s=ne(Ur.Deactivate);return(new H).add({keys:[{pubkey:t,isSigner:!1,isWritable:!0},{pubkey:j,isSigner:!1,isWritable:!1},{pubkey:r,isSigner:!0,isWritable:!1}],programId:this.programId,data:s})}}Mr.programId=new f("Stake11111111111111111111111111111111111111"),Mr.space=200;class Dr{constructor(e,t,r,s){this.nodePubkey=void 0,this.authorizedVoter=void 0,this.authorizedWithdrawer=void 0,this.commission=void 0,this.nodePubkey=e,this.authorizedVoter=t,this.authorizedWithdrawer=r,this.commission=s}}class Hr{constructor(){}static decodeInstructionType(e){this.checkProgramId(e.programId);const t=(0,s.k)("instruction").decode(e.data);let r;for(const[e,s]of Object.entries(Fr))if(s.index==t){r=e;break}if(!r)throw new Error("Instruction type incorrect; not a VoteInstruction");return r}static decodeInitializeAccount(e){this.checkProgramId(e.programId),this.checkKeyLength(e.keys,4);const{voteInit:t}=ie(Fr.InitializeAccount,e.data);return{votePubkey:e.keys[0].pubkey,nodePubkey:e.keys[3].pubkey,voteInit:new Dr(new f(t.nodePubkey),new f(t.authorizedVoter),new f(t.authorizedWithdrawer),t.commission)}}static decodeAuthorize(e){this.checkProgramId(e.programId),this.checkKeyLength(e.keys,3);const{newAuthorized:t,voteAuthorizationType:r}=ie(Fr.Authorize,e.data);return{votePubkey:e.keys[0].pubkey,authorizedPubkey:e.keys[2].pubkey,newAuthorizedPubkey:new f(t),voteAuthorizationType:{index:r}}}static decodeAuthorizeWithSeed(e){this.checkProgramId(e.programId),this.checkKeyLength(e.keys,3);const{voteAuthorizeWithSeedArgs:{currentAuthorityDerivedKeyOwnerPubkey:t,currentAuthorityDerivedKeySeed:r,newAuthorized:s,voteAuthorizationType:n}}=ie(Fr.AuthorizeWithSeed,e.data);return{currentAuthorityDerivedKeyBasePubkey:e.keys[2].pubkey,currentAuthorityDerivedKeyOwnerPubkey:new f(t),currentAuthorityDerivedKeySeed:r,newAuthorizedPubkey:new f(s),voteAuthorizationType:{index:n},votePubkey:e.keys[0].pubkey}}static decodeWithdraw(e){this.checkProgramId(e.programId),this.checkKeyLength(e.keys,3);const{lamports:t}=ie(Fr.Withdraw,e.data);return{votePubkey:e.keys[0].pubkey,authorizedWithdrawerPubkey:e.keys[2].pubkey,lamports:t,toPubkey:e.keys[1].pubkey}}static checkProgramId(e){if(!e.equals(jr.programId))throw new Error("invalid instruction; programId is not VoteProgram")}static checkKeyLength(e,t){if(e.length<t)throw new Error(`invalid instruction; found ${e.length} keys, expected at least ${t}`)}}const Fr=Object.freeze({InitializeAccount:{index:0,layout:(0,s.g)([(0,s.k)("instruction"),((e="voteInit")=>(0,s.g)([C("nodePubkey"),C("authorizedVoter"),C("authorizedWithdrawer"),(0,s.u)("commission")],e))()])},Authorize:{index:1,layout:(0,s.g)([(0,s.k)("instruction"),C("newAuthorized"),(0,s.k)("voteAuthorizationType")])},Withdraw:{index:3,layout:(0,s.g)([(0,s.k)("instruction"),(0,s.l)("lamports")])},AuthorizeWithSeed:{index:10,layout:(0,s.g)([(0,s.k)("instruction"),((e="voteAuthorizeWithSeedArgs")=>(0,s.g)([(0,s.k)("voteAuthorizationType"),C("currentAuthorityDerivedKeyOwnerPubkey"),T("currentAuthorityDerivedKeySeed"),C("newAuthorized")],e))()])}}),$r=Object.freeze({Voter:{index:0},Withdrawer:{index:1}});class jr{constructor(){}static initializeAccount(e){const{votePubkey:t,nodePubkey:r,voteInit:s}=e,n=ne(Fr.InitializeAccount,{voteInit:{nodePubkey:d(s.nodePubkey.toBuffer()),authorizedVoter:d(s.authorizedVoter.toBuffer()),authorizedWithdrawer:d(s.authorizedWithdrawer.toBuffer()),commission:s.commission}}),i={keys:[{pubkey:t,isSigner:!1,isWritable:!0},{pubkey:X,isSigner:!1,isWritable:!1},{pubkey:j,isSigner:!1,isWritable:!1},{pubkey:r,isSigner:!0,isWritable:!1}],programId:this.programId,data:n};return new D(i)}static createAccount(e){const t=new H;return t.add(ge.createAccount({fromPubkey:e.fromPubkey,newAccountPubkey:e.votePubkey,lamports:e.lamports,space:this.space,programId:this.programId})),t.add(this.initializeAccount({votePubkey:e.votePubkey,nodePubkey:e.voteInit.nodePubkey,voteInit:e.voteInit}))}static authorize(e){const{votePubkey:t,authorizedPubkey:r,newAuthorizedPubkey:s,voteAuthorizationType:n}=e,i=ne(Fr.Authorize,{newAuthorized:d(s.toBuffer()),voteAuthorizationType:n.index}),o=[{pubkey:t,isSigner:!1,isWritable:!0},{pubkey:j,isSigner:!1,isWritable:!1},{pubkey:r,isSigner:!0,isWritable:!1}];return(new H).add({keys:o,programId:this.programId,data:i})}static authorizeWithSeed(e){const{currentAuthorityDerivedKeyBasePubkey:t,currentAuthorityDerivedKeyOwnerPubkey:r,currentAuthorityDerivedKeySeed:s,newAuthorizedPubkey:n,voteAuthorizationType:i,votePubkey:o}=e,a=ne(Fr.AuthorizeWithSeed,{voteAuthorizeWithSeedArgs:{currentAuthorityDerivedKeyOwnerPubkey:d(r.toBuffer()),currentAuthorityDerivedKeySeed:s,newAuthorized:d(n.toBuffer()),voteAuthorizationType:i.index}}),c=[{pubkey:o,isSigner:!1,isWritable:!0},{pubkey:j,isSigner:!1,isWritable:!1},{pubkey:t,isSigner:!0,isWritable:!1}];return(new H).add({keys:c,programId:this.programId,data:a})}static withdraw(e){const{votePubkey:t,authorizedWithdrawerPubkey:r,lamports:s,toPubkey:n}=e,i=ne(Fr.Withdraw,{lamports:s}),o=[{pubkey:t,isSigner:!1,isWritable:!0},{pubkey:n,isSigner:!1,isWritable:!0},{pubkey:r,isSigner:!0,isWritable:!1}];return(new H).add({keys:o,programId:this.programId,data:i})}static safeWithdraw(e,t,r){if(e.lamports>t-r)throw new Error("Withdraw will leave vote account with insuffcient funds.");return jr.withdraw(e)}}jr.programId=new f("Vote111111111111111111111111111111111111111"),jr.space=3731;const Jr=new f("Va1idator1nfo111111111111111111111111111111"),Gr=(0,s.w)({name:(0,s.p)(),website:(0,s.y)((0,s.p)()),details:(0,s.y)((0,s.p)()),keybaseUsername:(0,s.y)((0,s.p)())});class Yr{constructor(e,t){this.key=void 0,this.info=void 0,this.key=e,this.info=t}static fromConfigData(e){let t=[...e];if(2!==z(t))return null;const r=[];for(let e=0;e<2;e++){const e=new f(t.slice(0,b));t=t.slice(b);const s=1===t.slice(0,1)[0];t=t.slice(1),r.push({publicKey:e,isSigner:s})}if(r[0].publicKey.equals(Jr)&&r[1].isSigner){const e=T().decode(s.b.Buffer.from(t)),n=JSON.parse(e);return(0,s.M)(n,Gr),new Yr(r[1].publicKey,n)}return null}}const Xr=new f("Vote111111111111111111111111111111111111111"),Zr=(0,s.g)([C("nodePubkey"),C("authorizedWithdrawer"),(0,s.u)("commission"),(0,s.n)(),(0,s.j)((0,s.g)([(0,s.n)("slot"),(0,s.k)("confirmationCount")]),(0,s.o)((0,s.k)(),-8),"votes"),(0,s.u)("rootSlotValid"),(0,s.n)("rootSlot"),(0,s.n)(),(0,s.j)((0,s.g)([(0,s.n)("epoch"),C("authorizedVoter")]),(0,s.o)((0,s.k)(),-8),"authorizedVoters"),(0,s.g)([(0,s.j)((0,s.g)([C("authorizedPubkey"),(0,s.n)("epochOfLastAuthorizedSwitch"),(0,s.n)("targetEpoch")]),32,"buf"),(0,s.n)("idx"),(0,s.u)("isEmpty")],"priorVoters"),(0,s.n)(),(0,s.j)((0,s.g)([(0,s.n)("epoch"),(0,s.n)("credits"),(0,s.n)("prevCredits")]),(0,s.o)((0,s.k)(),-8),"epochCredits"),(0,s.g)([(0,s.n)("slot"),(0,s.n)("timestamp")],"lastTimestamp")]);class Qr{constructor(e){this.nodePubkey=void 0,this.authorizedWithdrawer=void 0,this.commission=void 0,this.rootSlot=void 0,this.votes=void 0,this.authorizedVoters=void 0,this.priorVoters=void 0,this.epochCredits=void 0,this.lastTimestamp=void 0,this.nodePubkey=e.nodePubkey,this.authorizedWithdrawer=e.authorizedWithdrawer,this.commission=e.commission,this.rootSlot=e.rootSlot,this.votes=e.votes,this.authorizedVoters=e.authorizedVoters,this.priorVoters=e.priorVoters,this.epochCredits=e.epochCredits,this.lastTimestamp=e.lastTimestamp}static fromAccountData(e){const t=Zr.decode(d(e),4);let r=t.rootSlot;return t.rootSlotValid||(r=null),new Qr({nodePubkey:new f(t.nodePubkey),authorizedWithdrawer:new f(t.authorizedWithdrawer),commission:t.commission,votes:t.votes,rootSlot:r,authorizedVoters:t.authorizedVoters.map(es),priorVoters:rs(t.priorVoters),epochCredits:t.epochCredits,lastTimestamp:t.lastTimestamp})}}function es({authorizedVoter:e,epoch:t}){return{epoch:t,authorizedVoter:new f(e)}}function ts({authorizedPubkey:e,epochOfLastAuthorizedSwitch:t,targetEpoch:r}){return{authorizedPubkey:new f(e),epochOfLastAuthorizedSwitch:t,targetEpoch:r}}function rs({buf:e,idx:t,isEmpty:r}){return r?[]:[...e.slice(t+1).map(ts),...e.slice(0,t).map(ts)]}const ss={http:{devnet:"http://api.devnet.solana.com",testnet:"http://api.testnet.solana.com","mainnet-beta":"http://api.mainnet-beta.solana.com/"},https:{devnet:"https://api.devnet.solana.com",testnet:"https://api.testnet.solana.com","mainnet-beta":"https://api.mainnet-beta.solana.com/"}};function ns(e,t){const r=!1===t?"http":"https";if(!e)return ss[r].devnet;const s=ss[r][e];if(!s)throw new Error(`Unknown ${r} cluster: ${e}`);return s}async function is(e,t,r,s){let n,i;r&&Object.prototype.hasOwnProperty.call(r,"lastValidBlockHeight")||r&&Object.prototype.hasOwnProperty.call(r,"nonceValue")?(n=r,i=s):i=r;const o=i&&{skipPreflight:i.skipPreflight,preflightCommitment:i.preflightCommitment||i.commitment,minContextSlot:i.minContextSlot},a=await e.sendRawTransaction(t,o),c=i&&i.commitment,u=n?e.confirmTransaction(n,c):e.confirmTransaction(a,c),d=(await u).value;if(d.err)throw new Error(`Raw transaction ${a} failed (${JSON.stringify(d)})`);return a}const os=1e9}}]);